<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>API on Even - A super concise theme for Hugo</title>
    <link>https://it-boyer.github.io/categories/api/</link>
    <description>Recent content in API on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 24 Sep 2017 18:21:38 +0000</lastBuildDate><atom:link href="https://it-boyer.github.io/categories/api/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GCD底层并发API</title>
      <link>https://it-boyer.github.io/post/ios/gcd%E5%BA%95%E5%B1%82%E5%B9%B6%E5%8F%91api/</link>
      <pubDate>Sun, 24 Sep 2017 18:21:38 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/ios/gcd%E5%BA%95%E5%B1%82%E5%B9%B6%E5%8F%91api/</guid>
      <description>这篇文章里，我们将会讨论一些 iOS 和 OS X 都可以使用的底层 API。除了 dispatch_once ，我们一般不鼓励使用其中的任何一种技术。 但是我们想要揭示出表面之下深层次的</description>
    </item>
    
    <item>
      <title>常见的后台实现</title>
      <link>https://it-boyer.github.io/post/ios/%E5%B8%B8%E8%A7%81%E7%9A%84%E5%90%8E%E5%8F%B0%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Sun, 24 Sep 2017 11:03:35 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/ios/%E5%B8%B8%E8%A7%81%E7%9A%84%E5%90%8E%E5%8F%B0%E5%AE%9E%E7%8E%B0/</guid>
      <description>概览 本文主要探讨一些常用后台任务的最佳实践： 如何做异步网络请求 如何异步处理大型文件，以保持较低的内存占用 操作队列 (Operation Queues) 还是 GCD ? 操作队列提供了在</description>
    </item>
    
    <item>
      <title>iOS多线程API介绍</title>
      <link>https://it-boyer.github.io/post/ios/ios%E5%A4%9A%E7%BA%BF%E7%A8%8Bapi%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Sun, 24 Sep 2017 09:18:49 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/ios/ios%E5%A4%9A%E7%BA%BF%E7%A8%8Bapi%E4%BB%8B%E7%BB%8D/</guid>
      <description>并发所描述的概念就是同时运行多个任务。这些任务可能是以在单核 CPU 上分时（时间共享）的形式同时运行，也可能是在多核 CPU 上以真正的并行方式来运行。 OS</description>
    </item>
    
    <item>
      <title>NSURLSession的使用说明</title>
      <link>https://it-boyer.github.io/post/ios/nsurlsession%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Fri, 08 Sep 2017 18:48:43 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/ios/nsurlsession%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</guid>
      <description>iOS 7 和 Mac OS X 10.9 Mavericks 中一个显著的变化就是对 Foundation URL 加载系统的彻底重构。 现在已经有人在深入苹果的网络层基础架构的地方做研究了，所以我想是时候来分享一些</description>
    </item>
    
    <item>
      <title>CoreML机器学习初级教程</title>
      <link>https://it-boyer.github.io/post/ios/coreml%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%88%9D%E7%BA%A7%E6%95%99%E7%A8%8B/</link>
      <pubDate>Sat, 24 Jun 2017 22:10:44 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/ios/coreml%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%88%9D%E7%BA%A7%E6%95%99%E7%A8%8B/</guid>
      <description>资源 Core ML开发文档 ML模型资源页面 在Working with Models中包含有几个常用的模型模板，例如用于在图片中检测物体——树、动物、人等等。 Integrating</description>
    </item>
    
    <item>
      <title>iOS11ARKit初探</title>
      <link>https://it-boyer.github.io/post/ios/ios11arkit%E5%88%9D%E6%8E%A2/</link>
      <pubDate>Sat, 24 Jun 2017 19:46:59 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/ios/ios11arkit%E5%88%9D%E6%8E%A2/</guid>
      <description>iOS11新技术 ARKit教程 增强现实(AR)描述用户体验，将2D或3D元素从设备的摄像头中添加到实时视图中，从而使这些元素出现在真实世界中</description>
    </item>
    
    <item>
      <title>iOS Document Interaction 编程指南</title>
      <link>https://it-boyer.github.io/post/ios/iosdocumentinteraction%E7%BC%96%E7%A8%8B%E6%8C%87%E5%8D%97/</link>
      <pubDate>Tue, 01 Jul 2014 23:12:01 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/ios/iosdocumentinteraction%E7%BC%96%E7%A8%8B%E6%8C%87%E5%8D%97/</guid>
      <description>&lt;h4 id=&#34;关于-document-interaction&#34;&gt;关于 Document Interaction&lt;/h4&gt;
&lt;p&gt;iOS支持在你的app中通过调用其他app来预览和显示文档。iOS还支持文件关联，允许其他app调用你的app打开文件。这些技术包括了UIKit中提供的&lt;a href=&#34;https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIDocumentInteractionController_class/Reference/Reference.html&#34;&gt;UIDocumentInteractionController&lt;/a&gt;类，以及&lt;a href=&#34;https://developer.apple.com/library/ios/documentation/QuickLook/Reference/QuickLookFrameworkReference_iPhoneOS/_index.html&#34;&gt;Quick Look&lt;/a&gt;框架。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;######预览文档和呈现选项菜单&lt;br&gt;
如果app需要打开自身并不支持的文件时，就需要使用&lt;strong&gt;UIDocumentInteractionController&lt;/strong&gt;。一个&lt;strong&gt;document interaction controller&lt;/strong&gt;通过&lt;strong&gt;Quick Look框架&lt;/strong&gt;判断文档是否能被另一个app打开和预览。也就是说，app可以通过&lt;strong&gt;documentinteraction controller&lt;/strong&gt;提供一些支持打开该文件方式的菜单。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具体实现需要以下步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;需要通过其他APP打开的文件，来实例化&lt;code&gt;UIDocumentInteractionController&lt;/code&gt;实例对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;在自己的APP UI中提供一个代表这种文件的图像标（一般显示文件名或者图标）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;用户交互，如触摸这个控件，则调用&lt;code&gt;documentinteractioncontroller&lt;/code&gt;对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;三种交互界面:
1. 预览文件的内容。
2. 一个包含预览和打开操作的菜单。可以通过实现某些委托方法，向菜单中加入其他操作，比如复制、打印。
3. 一个菜单，仅包含“以其它方式打开”操作。&lt;/p&gt;
&lt;p&gt;同时，&lt;code&gt;documentinteractioncontroller&lt;/code&gt;内置了一些手势，必要时可以直接实现它们。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;######使用&lt;code&gt;documentinteractioncontroller&lt;/code&gt;的场景:&lt;strong&gt;与文件交互的app都可以使用。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;需要从网络下载文件的APP:&lt;br&gt;
例如，email程序需要打开和预览邮件附件。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;不下载文件的APP:&lt;br&gt;
例如，APP需要支持文件共享（参考“File-Sharing Support” in &lt;a href=&#34;https://developer.apple.com/library/ios/documentation/Miscellaneous/Conceptual/iPhoneOSTechOverview/Introduction/Introduction.html#//apple_ref/doc/uid/TP40007898&#34;&gt;iOS Technology Overview&lt;/a&gt;), 即可以对同步到app Documents/Shared目录下的文件使用&lt;code&gt;documentinteractioncontroller&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
