<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>macOS on Even - A super concise theme for Hugo</title>
    <link>https://it-boyer.github.io/categories/macos/</link>
    <description>Recent content in macOS on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 18 Nov 2018 19:10:49 +0000</lastBuildDate><atom:link href="https://it-boyer.github.io/categories/macos/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Guaka快速创建swift命令行CLI的工具</title>
      <link>https://it-boyer.github.io/post/macos/guaka%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BAswift%E5%91%BD%E4%BB%A4%E8%A1%8Ccli%E7%9A%84%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Sun, 18 Nov 2018 19:10:49 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/guaka%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BAswift%E5%91%BD%E4%BB%A4%E8%A1%8Ccli%E7%9A%84%E5%B7%A5%E5%85%B7/</guid>
      <description>{% github nsomar Guaka 7d6135f width = 30% %} Guaka介绍 通过 Guaka Framework 来实现 CLI(command-line interface)。 该框架可以快速实现如下的效果： git checkout -v &amp;quot;url&amp;quot; git 就是一个 CLI，checkou</description>
    </item>
    
    <item>
      <title>使用swift命令行抓取WWDC字幕</title>
      <link>https://it-boyer.github.io/post/macos/%E4%BD%BF%E7%94%A8swift%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%8A%93%E5%8F%96wwdc%E5%AD%97%E5%B9%95/</link>
      <pubDate>Sun, 18 Nov 2018 19:10:49 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/%E4%BD%BF%E7%94%A8swift%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%8A%93%E5%8F%96wwdc%E5%AD%97%E5%B9%95/</guid>
      <description>{% github it-boyer WWDC-Subtitles 84878dc width = 30% %} 平时没有那么大段的时间能去看这些 session 的视频，想先通过字幕能了解到 session 中的内容，所以搜罗了网上大牛抓取WWDC字幕的相关实现。 原</description>
    </item>
    
    <item>
      <title>使用Fastlane持续集成开发</title>
      <link>https://it-boyer.github.io/post/macos/%E4%BD%BF%E7%94%A8fastlane%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E5%BC%80%E5%8F%91/</link>
      <pubDate>Wed, 24 Oct 2018 12:45:30 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/%E4%BD%BF%E7%94%A8fastlane%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E5%BC%80%E5%8F%91/</guid>
      <description>{% github it-boyer width = 30% %} 持续集成 在框架开发中，一个优秀的持续集成环境是至关重要的。CI 可以保证潜在的贡献者在有保障的情况下对代码进行修改，减小了框架的</description>
    </item>
    
    <item>
      <title>cocoapods如何自动化管理项目依赖</title>
      <link>https://it-boyer.github.io/post/macos/cocoapods%E5%A6%82%E4%BD%95%E8%87%AA%E5%8A%A8%E5%8C%96%E7%AE%A1%E7%90%86%E9%A1%B9%E7%9B%AE%E4%BE%9D%E8%B5%96/</link>
      <pubDate>Tue, 23 Oct 2018 20:29:21 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/cocoapods%E5%A6%82%E4%BD%95%E8%87%AA%E5%8A%A8%E5%8C%96%E7%AE%A1%E7%90%86%E9%A1%B9%E7%9B%AE%E4%BE%9D%E8%B5%96/</guid>
      <description>通过介绍项目相关的属性配置，来了解cocoapods如何自动化管理项目依赖的。最后会通过自定义ruby脚本来演示。 cocoapods偶现问题</description>
    </item>
    
    <item>
      <title>Swift访问REST服务开发TrelloAPI</title>
      <link>https://it-boyer.github.io/post/macos/swift%E8%AE%BF%E9%97%AErest%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91trelloapi/</link>
      <pubDate>Mon, 22 Oct 2018 08:30:26 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/swift%E8%AE%BF%E9%97%AErest%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91trelloapi/</guid>
      <description></description>
    </item>
    
    <item>
      <title>fork印象笔记SDK支持pod安装</title>
      <link>https://it-boyer.github.io/post/macos/fork%E5%8D%B0%E8%B1%A1%E7%AC%94%E8%AE%B0sdk%E6%94%AF%E6%8C%81pod%E5%AE%89%E8%A3%85/</link>
      <pubDate>Sun, 21 Oct 2018 00:12:20 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/fork%E5%8D%B0%E8%B1%A1%E7%AC%94%E8%AE%B0sdk%E6%94%AF%E6%8C%81pod%E5%AE%89%E8%A3%85/</guid>
      <description>{% github it-boyer evernote-sdk-mac fd5da70 width = 30% %} 制作pod支持 fork 并clone代码 git clone https://github.com/evernote/evernote-sdk-mac.git 创建pod spec索引文件 $ cd evernote-sdk-mac $ pod spec create EvernoteSDK https://github.com/it-boyer/evernote-sdk-mac.git 编写配置文件 设置支持的平台，源码目录位置</description>
    </item>
    
    <item>
      <title>CommandLineTool使用pod依赖库开发</title>
      <link>https://it-boyer.github.io/post/macos/commandlinetool%E4%BD%BF%E7%94%A8pod%E4%BE%9D%E8%B5%96%E5%BA%93%E5%BC%80%E5%8F%91/</link>
      <pubDate>Tue, 16 Oct 2018 17:08:15 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/commandlinetool%E4%BD%BF%E7%94%A8pod%E4%BE%9D%E8%B5%96%E5%BA%93%E5%BC%80%E5%8F%91/</guid>
      <description>问题 #3707 dyld: Library not loaded: @rpath/FilesProvider.framework/Versions/A/FilesProvider 结论：cocoa pods不支持Command Line Tool项目 Cocoapods + Command Line Tool - dyld: Library not loaded: @rpath/Realm.framework/Versions/A/Realm cocoa pods不支持Command Line Tool项目</description>
    </item>
    
    <item>
      <title>swift调用pngquant批量压缩图片</title>
      <link>https://it-boyer.github.io/post/macos/swift%E8%B0%83%E7%94%A8pngquant%E6%89%B9%E9%87%8F%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87/</link>
      <pubDate>Mon, 15 Oct 2018 20:51:45 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/swift%E8%B0%83%E7%94%A8pngquant%E6%89%B9%E9%87%8F%E5%8E%8B%E7%BC%A9%E5%9B%BE%E7%89%87/</guid>
      <description>{% github amosavian FileProvider b597244 width = 30% %} 安装FilesProvider 使用FilesProvider来做文件处理，通过SPM管理库依赖 配置Package.swif</description>
    </item>
    
    <item>
      <title>为Pod的库创建演示文件SwiftPlayground</title>
      <link>https://it-boyer.github.io/post/macos/%E4%B8%BApod%E7%9A%84%E5%BA%93%E5%88%9B%E5%BB%BA%E6%BC%94%E7%A4%BA%E6%96%87%E4%BB%B6swiftplayground/</link>
      <pubDate>Fri, 12 Oct 2018 19:56:59 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/%E4%B8%BApod%E7%9A%84%E5%BA%93%E5%88%9B%E5%BB%BA%E6%BC%94%E7%A4%BA%E6%96%87%E4%BB%B6swiftplayground/</guid>
      <description>{% github asmallteapot cocoapods-playgrounds c54b492 width = 30% %} issues 62 在playground中优雅的使用Pod This Could Be Us But You Playing Generates a Swift Playground for any Pod. Installation $ gem install cocoapods-playgrounds Usage CocoaPods To generate a Playground for a specific Pod: $ pod playgrounds Alamofire To generate a Playground for a</description>
    </item>
    
    <item>
      <title>配置Podfile支持playground导入库</title>
      <link>https://it-boyer.github.io/post/macos/%E9%85%8D%E7%BD%AEpodfile%E6%94%AF%E6%8C%81playground%E5%AF%BC%E5%85%A5%E5%BA%93/</link>
      <pubDate>Sat, 06 Oct 2018 14:50:12 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/%E9%85%8D%E7%BD%AEpodfile%E6%94%AF%E6%8C%81playground%E5%AF%BC%E5%85%A5%E5%BA%93/</guid>
      <description>pod支持问题 xcode-playground-with-cocoapods You could use ThisCouldBeUsButYouPlaying or add this to your Podfile xcode7.3.1和cocoapods1.0版本导致playground无法import相关动态库 Rx</description>
    </item>
    
    <item>
      <title>SPM搭建Perfect模版服务器</title>
      <link>https://it-boyer.github.io/post/macos/spm%E6%90%AD%E5%BB%BAperfect%E6%A8%A1%E7%89%88%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Tue, 02 Oct 2018 11:13:35 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/spm%E6%90%AD%E5%BB%BAperfect%E6%A8%A1%E7%89%88%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>Perfect简介 {% github PerfectlySoft Perfect 60e44e4 width = 30% %} 目前比较流行服务端框架主要有Vapor、Perfect、Kitura和Zewo，他们各有长短，本人这次主</description>
    </item>
    
    <item>
      <title>利用JavaScript构建OSX原生应用</title>
      <link>https://it-boyer.github.io/post/macos/%E5%88%A9%E7%94%A8javascript%E6%9E%84%E5%BB%BAosx%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8/</link>
      <pubDate>Sat, 29 Sep 2018 18:35:50 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/%E5%88%A9%E7%94%A8javascript%E6%9E%84%E5%BB%BAosx%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8/</guid>
      <description>利用JavaScript构建OSX应用 Example OS X applications written in JavaScript. JavaScript for Automation Cookbook 廖雪峰的JavaScript教程 W3Cschool javascript教程 JavaScript快</description>
    </item>
    
    <item>
      <title>修改Mac用户名导致丢失管理员权限问题修复</title>
      <link>https://it-boyer.github.io/post/macos/%E4%BF%AE%E6%94%B9mac%E7%94%A8%E6%88%B7%E5%90%8D%E5%AF%BC%E8%87%B4%E4%B8%A2%E5%A4%B1%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98%E4%BF%AE%E5%A4%8D/</link>
      <pubDate>Tue, 25 Sep 2018 19:16:53 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/%E4%BF%AE%E6%94%B9mac%E7%94%A8%E6%88%B7%E5%90%8D%E5%AF%BC%E8%87%B4%E4%B8%A2%E5%A4%B1%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98%E4%BF%AE%E5%A4%8D/</guid>
      <description>出现的问题主要有两点 数据恢复问题 1）修改用户名后，mac系统认为是创建了一个新的用户，这时候，之前管理员账号的数据在当前用户的finder里</description>
    </item>
    
    <item>
      <title>Jazzy生成Swift文档工具</title>
      <link>https://it-boyer.github.io/post/macos/jazzy%E7%94%9F%E6%88%90swift%E6%96%87%E6%A1%A3%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Wed, 05 Sep 2018 15:52:33 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/jazzy%E7%94%9F%E6%88%90swift%E6%96%87%E6%A1%A3%E5%B7%A5%E5%85%B7/</guid>
      <description>{% github realm jazzy 6932e5e width = 30% %} demo {% github appcoda SwiftDocSample 24c1649 width = 30% %} 使用 Jazzy 产生代码文档 Jazzy 是一款可以为 Swift 和 Objective-C 代码产生具有 Apple 风格的代码文档工具。事实上，Jazzy 会为你创建一</description>
    </item>
    
    <item>
      <title>使用CocoaPods开发静态库</title>
      <link>https://it-boyer.github.io/post/macos/%E4%BD%BF%E7%94%A8cocoapods%E5%BC%80%E5%8F%91%E9%9D%99%E6%80%81%E5%BA%93/</link>
      <pubDate>Thu, 21 Jun 2018 21:37:16 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/%E4%BD%BF%E7%94%A8cocoapods%E5%BC%80%E5%8F%91%E9%9D%99%E6%80%81%E5%BA%93/</guid>
      <description>Cocoapods作为OS X和iOS开发平台的类库管理工具，已经非常完善和强大。通常我们用pod来管理第三方开源类库，但我们也极有可能会开发</description>
    </item>
    
    <item>
      <title>MacOS系统下运行exe小程序</title>
      <link>https://it-boyer.github.io/post/macos/macos%E7%B3%BB%E7%BB%9F%E4%B8%8B%E8%BF%90%E8%A1%8Cexe%E5%B0%8F%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Tue, 19 Jun 2018 18:09:18 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/macos%E7%B3%BB%E7%BB%9F%E4%B8%8B%E8%BF%90%E8%A1%8Cexe%E5%B0%8F%E7%A8%8B%E5%BA%8F/</guid>
      <description>场景 例如，当急需在Mac系统上，安装abletonLive，涉及到破解机exe小程序，使用文中提到的两种方法，就解了燃眉之急。 方法一 crossover Wra</description>
    </item>
    
    <item>
      <title>在Mac安装Fiddler</title>
      <link>https://it-boyer.github.io/post/macos/%E5%9C%A8mac%E5%AE%89%E8%A3%85fiddler/</link>
      <pubDate>Thu, 31 May 2018 16:38:52 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/%E5%9C%A8mac%E5%AE%89%E8%A3%85fiddler/</guid>
      <description>安装Mono Mac下需要使用.Net编译后的程序，首先需要用到跨平台的方案Mono(现阶段微软已推出跨平台的方案.Net Core，不过暂时只</description>
    </item>
    
    <item>
      <title>支持OSX浏览PDF简单视图</title>
      <link>https://it-boyer.github.io/post/macos/%E6%94%AF%E6%8C%81osx%E6%B5%8F%E8%A7%88pdf%E7%AE%80%E5%8D%95%E8%A7%86%E5%9B%BE/</link>
      <pubDate>Fri, 08 Sep 2017 18:48:43 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/%E6%94%AF%E6%8C%81osx%E6%B5%8F%E8%A7%88pdf%E7%AE%80%E5%8D%95%E8%A7%86%E5%9B%BE/</guid>
      <description>运行scheme： PDFReaderForOSX 即可 {% github it-boyer PDFReader 737a7e %} 支持iOS pageViewController: pdf翻页效果视图控制器 startingViewController:DataViewCon</description>
    </item>
    
    <item>
      <title>Perfect开发天气接口API</title>
      <link>https://it-boyer.github.io/post/macos/perfect%E5%BC%80%E5%8F%91%E5%A4%A9%E6%B0%94%E6%8E%A5%E5%8F%A3api/</link>
      <pubDate>Mon, 26 Jun 2017 17:01:24 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/perfect%E5%BC%80%E5%8F%91%E5%A4%A9%E6%B0%94%E6%8E%A5%E5%8F%A3api/</guid>
      <description>Perfect介绍 Perfect提供一系列代表请求和响应的对象组件，并允许在服务器上增加管理句柄用于产生页面内容。 所有对象都是在服务器对象创</description>
    </item>
    
    <item>
      <title>mupdf使用说明</title>
      <link>https://it-boyer.github.io/post/%E7%BC%96%E8%AF%91/mupdf%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</link>
      <pubDate>Mon, 19 Jun 2017 18:25:32 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E7%BC%96%E8%AF%91/mupdf%E7%9A%84%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</guid>
      <description>需求描述 目前手机端使用mupdf，通过在底层添加加密方法实现定制pbb阅读器功能。 资源获取如下： {% blockquote %} Download packages of the latest release for your system: Source code for all platforms. Windows viewer and tools. Android</description>
    </item>
    
    <item>
      <title>swift开发macOS系统的终端命令行应用</title>
      <link>https://it-boyer.github.io/post/macos/swift%E5%BC%80%E5%8F%91macos%E7%B3%BB%E7%BB%9F%E7%9A%84%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BA%94%E7%94%A8/</link>
      <pubDate>Mon, 29 May 2017 13:00:08 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/swift%E5%BC%80%E5%8F%91macos%E7%B3%BB%E7%BB%9F%E7%9A%84%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BA%94%E7%94%A8/</guid>
      <description>教程 命令行程序MacOS的教程 使用swift创建一个命令行程序，相比其他语言如C、Perl、Ruby或java。 选用SWIFT的理由： Swi</description>
    </item>
    
    <item>
      <title>从UIKit到AppKit</title>
      <link>https://it-boyer.github.io/post/macos/%E4%BB%8Euikit%E5%88%B0appkit/</link>
      <pubDate>Fri, 03 Mar 2017 17:55:16 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/%E4%BB%8Euikit%E5%88%B0appkit/</guid>
      <description>不同点 NSWindowController 在Mac上应用都支持多窗口（NSWindowController），AppKit 中都有 NSWindowController担当着类似</description>
    </item>
    
    <item>
      <title>使用Cocoapods创建私有podspec</title>
      <link>https://it-boyer.github.io/post/macos/%E4%BD%BF%E7%94%A8cocoapods%E5%88%9B%E5%BB%BA%E7%A7%81%E6%9C%89podspec/</link>
      <pubDate>Tue, 28 Feb 2017 15:46:16 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/%E4%BD%BF%E7%94%A8cocoapods%E5%88%9B%E5%BB%BA%E7%A7%81%E6%9C%89podspec/</guid>
      <description>创建一个版本库来托管pod索引:pod repo add命令 第一步：在github登录个人账号，创建一个库作为pod索引托管库。也可根据具体情况可以选</description>
    </item>
    
    <item>
      <title>JavaScript自动化组件OC桥接</title>
      <link>https://it-boyer.github.io/post/macos/javascript%E8%87%AA%E5%8A%A8%E5%8C%96%E7%BB%84%E4%BB%B6oc%E6%A1%A5%E6%8E%A5/</link>
      <pubDate>Wed, 15 Feb 2017 17:19:30 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/javascript%E8%87%AA%E5%8A%A8%E5%8C%96%E7%BB%84%E4%BB%B6oc%E6%A1%A5%E6%8E%A5/</guid>
      <description>文档 JavaScript自动化有一个内置的Objective-C Bridge，使您能够访问文件系统，创建Cocoa应用程序。 Objective-C Bridge的</description>
    </item>
    
    <item>
      <title>macOS支持JavaScript自动化组件基础</title>
      <link>https://it-boyer.github.io/post/macos/macos%E6%94%AF%E6%8C%81javascript%E8%87%AA%E5%8A%A8%E5%8C%96%E7%BB%84%E4%BB%B6%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Wed, 15 Feb 2017 17:19:30 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/macos%E6%94%AF%E6%8C%81javascript%E8%87%AA%E5%8A%A8%E5%8C%96%E7%BB%84%E4%BB%B6%E5%9F%BA%E7%A1%80/</guid>
      <description>苹果 OS X Yosemite系统把 JavaScript作为 AppleScript的另一选择。Automation 是 OS X 10.10版本中的新特性，</description>
    </item>
    
    <item>
      <title>通过沙盒中JS脚本访问其他APP</title>
      <link>https://it-boyer.github.io/post/macos/%E9%80%9A%E8%BF%87%E6%B2%99%E7%9B%92%E4%B8%ADjs%E8%84%9A%E6%9C%AC%E8%AE%BF%E9%97%AE%E5%85%B6%E4%BB%96app/</link>
      <pubDate>Tue, 14 Feb 2017 18:25:29 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/%E9%80%9A%E8%BF%87%E6%B2%99%E7%9B%92%E4%B8%ADjs%E8%84%9A%E6%9C%AC%E8%AE%BF%E9%97%AE%E5%85%B6%E4%BB%96app/</guid>
      <description>如何使用脚本字典里的命令和对象来与其他的应用进行通讯? 这个教程将向您展示现在使用 AppleScript 来控制别的应用的最佳方式。我也会告诉您一些小技巧以帮助您和</description>
    </item>
    
    <item>
      <title>macOS之PDFKit基础</title>
      <link>https://it-boyer.github.io/post/macos/macos%E4%B9%8Bpdfkit%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Tue, 14 Feb 2017 14:29:18 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/macos%E4%B9%8Bpdfkit%E5%9F%BA%E7%A1%80/</guid>
      <description>一个PDF的基本构建块是Documents本身。Documents通常作为文件存储在磁盘上。 作为文件版本，可以支持元数据标记如作者，创建日期</description>
    </item>
    
    <item>
      <title>Fabric对macOS系统的支持</title>
      <link>https://it-boyer.github.io/post/macos/fabric%E5%AF%B9macos%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%94%AF%E6%8C%81%E8%B0%83%E7%A0%94/</link>
      <pubDate>Tue, 14 Feb 2017 11:14:35 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/fabric%E5%AF%B9macos%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%94%AF%E6%8C%81%E8%B0%83%E7%A0%94/</guid>
      <description>Fabric Fabric 是Twitter的移动应用开发平台，一个模块化、跨平台的移动开发套件，该博文主要研究crashlytics在app中的运用。 注册新的账户</description>
    </item>
    
    <item>
      <title>bilibiliForMac版之mpv依赖编译</title>
      <link>https://it-boyer.github.io/post/%E7%BC%96%E8%AF%91/bilibili%E4%B9%8Bmac%E7%89%88ffmpeg%E4%BE%9D%E8%B5%96%E7%BC%96%E8%AF%91/</link>
      <pubDate>Fri, 10 Feb 2017 10:45:03 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E7%BC%96%E8%AF%91/bilibili%E4%B9%8Bmac%E7%89%88ffmpeg%E4%BE%9D%E8%B5%96%E7%BC%96%E8%AF%91/</guid>
      <description>Bilibili Mac Client 一款基于mpv和ffmpeg底层库实现的播放器. 项目依赖库 编译在项目中所需的相关依赖库 下载资源 下载mpv-build {% codeblock lang:git %} git clone https://github.com/mpv-player/mpv-build.git {% endcodeblock</description>
    </item>
    
    <item>
      <title>开发Mac上的App插件</title>
      <link>https://it-boyer.github.io/post/macos/%E5%BC%80%E5%8F%91mac%E4%B8%8A%E7%9A%84app%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Tue, 07 Feb 2017 12:38:58 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/%E5%BC%80%E5%8F%91mac%E4%B8%8A%E7%9A%84app%E6%8F%92%E4%BB%B6/</guid>
      <description>在以前的 OS X 系统中，给你的 App 在运行时动态载入可执行代码比较困难。现在可以通过NSBundle和 plug-ins插件,可以很方便的向原有APP</description>
    </item>
    
    <item>
      <title>Xcode和Jenkins持续集成的几种实现方式</title>
      <link>https://it-boyer.github.io/post/macos/xcode%E5%92%8Cjenkins%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E7%9A%84%E5%87%A0%E7%A7%8D%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Fri, 18 Sep 2015 23:52:06 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/xcode%E5%92%8Cjenkins%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E7%9A%84%E5%87%A0%E7%A7%8D%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/</guid>
      <description>&lt;h2 id=&#34;ci服务器&#34;&gt;CI服务器&lt;/h2&gt;
&lt;p&gt;写到这儿，对于iOS开发者来说，需要准备好：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个比较容易获取的源代码仓库(包含源代码)&lt;/li&gt;
&lt;li&gt;一套自动化构建脚本&lt;/li&gt;
&lt;li&gt;一系列围绕构建的可执行测试&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来就需要一个CI服务器来根据源代码的变更触发构建，监控测试结果。&lt;/p&gt;
&lt;p&gt;目前，业界比较流行的，支持iOS构建的CI服务器有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://travis-ci.org&#34;&gt;Travis CI&lt;/a&gt;：是一个免费的云服务平台，基本上支持所有目前主流的语言，Object-C自然也在其中，但是只支持github极大的限制了其应用场景。目前国内无法访问，&lt;a href=&#34;http://www.infoq.com/cn/articles/build-ios-continuous-integration-platform-part3&#34;&gt;详见&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Jenkins&lt;/strong&gt;：经过多年的发展，其活跃的社区和丰富的插件让其成为了业界最受欢迎的CI服务器。通过使用Xcode插件，可以非常方便在Jenkins中运行iOS项目的构建脚本。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
