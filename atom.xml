<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>布衣男儿</title>
  
  <subtitle>不物喜，不己悲，善假物，易参行！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://huos3203.github.io/"/>
  <updated>2019-07-01T19:05:22.000Z</updated>
  <id>https://huos3203.github.io/</id>
  
  <author>
    <name>iTBoyer</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>KVO和KVC</title>
    <link href="https://huos3203.github.io/2019/07/02/KVO%E5%92%8CKVC/"/>
    <id>https://huos3203.github.io/2019/07/02/KVO和KVC/</id>
    <published>2019-07-01T19:05:22.000Z</published>
    <updated>2019-07-01T19:05:22.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read." />    <label for="pass">Please enter the password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      文章已被加密,请联系博主索要密钥&lt;/br&gt;
    
    </summary>
    
      <category term="iOS" scheme="https://huos3203.github.io/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>71</title>
    <link href="https://huos3203.github.io/2019/07/01/%E6%97%A5%E8%AE%B0/71/"/>
    <id>https://huos3203.github.io/2019/07/01/日记/71/</id>
    <published>2019-07-01T08:25:27.000Z</published>
    <updated>2019-07-01T08:25:27.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="规划任务"><a href="#规划任务" class="headerlink" title="规划任务"></a>规划任务</h3><p>在glo管理issues<br>在blink发布issues<br>在igantt跟踪进度</p><h3 id="将要做的工作"><a href="#将要做的工作" class="headerlink" title="将要做的工作"></a>将要做的工作</h3><p>工作总结<br>旅游计划<br>swift playground学习</p><h3 id="列入issues计划的标准"><a href="#列入issues计划的标准" class="headerlink" title="列入issues计划的标准"></a>列入issues计划的标准</h3><p>标题：下一步的意图<br>时间：完成的具体时间<br>目标：对里程碑有关键作用</p><h3 id="任务清单"><a href="#任务清单" class="headerlink" title="任务清单"></a>任务清单</h3><ol><li>电子巡查开发总结</li><li>旅游计划安排</li><li>学习swift开发</li></ol><p><img src="https://www.plantuml.com/plantuml/svg/AyaioKbLu7goU_VJheKlrYrysZ69wsd7xAUxTpsRlktbz2tlzymoCZ2qr3KmrpKmL32mj3Ari3Arr3QmC31Gu4hDIoa1wUVAIKqhKSX8JKn9BU82YKAO0000"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="iOS" scheme="https://huos3203.github.io/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>定制开源的CLImageEditor图片编辑工具</title>
    <link href="https://huos3203.github.io/2019/06/14/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E7%94%B5%E5%AD%90%E5%B7%A1%E6%9F%A5/%E5%AE%9A%E5%88%B6%E5%BC%80%E6%BA%90%E7%9A%84CLImageEditor%E5%9B%BE%E7%89%87%E7%BC%96%E8%BE%91%E5%B7%A5%E5%85%B7/"/>
    <id>https://huos3203.github.io/2019/06/14/个人项目/电子巡查/定制开源的CLImageEditor图片编辑工具/</id>
    <published>2019-06-13T22:19:57.000Z</published>
    <updated>2019-06-13T22:19:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="定制图片编辑器"><a href="#定制图片编辑器" class="headerlink" title="定制图片编辑器"></a>定制图片编辑器</h3><p><a href="https://blog.csdn.net/cjh965063777/article/details/51880966" target="_blank" rel="noopener">关于Other Link Flag的有关说明</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">other link 添加-ObjC</span><br></pre></td></tr></table></figure></p><p><img src="https://www.plantuml.com/plantuml/svg/pHfhLzp6zRj-XKhFIM3DGklqat1y6d0SapYsJy7EXoR5OdSMP6kbhQJ5k0xdW6FUuCKnnW_ym8vjI69lS1DZM1x-CTtHxdxAN-YT6MaqadOnQS_fAH-GD7FldJltVMVMqHmToRXu3qzju9rHjxHGkNUjwsHtLXr07wSrnxJmybvbUhAoirJTku7VFCFZRoGTPHnv4AbfP4du_beO_56fydYql3LRtfpvTMUEKQvDti3VpjNkZxglhkAPHzLlTgK_jidkz4qyD-vEBU3n5vN5jShsjVBsngSd168znpvhKsDBb3TVbdVV4enNstZgHrYbjZn1o4ojbpUtQu-tAij5z_O6MNsoLBc-3c2mAJmr0S202-_kqfRxyottzWhvFxq7Y31OkrsiFRdphz6h4Z1QVJvM6v-lx1PDPn1PiguP5u6Uk_YJEpScqiCpAzNTtVF9q_qNkiwJJPtjPbkM3iC6RywNT--xhySgQxFUA9CnBjrq2mlblULoQQAy-HG_ktqCPKsfyk95UNEqlFa3-VfrvzxvqBR9u7csSQAcbJ5W8ksZbUP4D3DbgZapRGieAN-iKdnSMPWexpselbwIa97sz2ZPAHKiuOEsFqXIJarTX6Nb9eBVT4LAwQfjoqtdD7IfopGSozHrP3N9gYqJW7DTiZGYlUyXWPGCCqqU6LC7mkJ5KhDa8AMR-JGyqwgZzgisUZzOAAfrIlp2e9s-A5-H_FL3qg0GYBu2Y0n_oIH-zT0TNGKxWdSwT4WEuVGEeYoI4mvvT8G1UarJxpOo9inwRmoWhyzzUAqskeBlhlNrqP7Vvonr8AlAMTMwA2TbPjeUiMOjtQ8PclE5vWnwMrBscKeZ7GseJWEOOw5Ps1rr76QwV7_DGoOWMIXZ8NkGRA87EOvc3DWTe9DwSgCoeCAZOjXFTbhwI1pLv-gex7FlI_9KJuzZmT9oeZzlf7LqIWsaVBQxozH1Kp07AX-mJ82W8t408lz-rGhD1gIfTbAciJzoBnfszeVe0UPJ3aftvXqdHkqu6BaSfaQ6V83EqwTFohQZEdcxKxLEQEaqCWBa7d-YnxaC3cM7FdsZal7ahdjh7SJjMHLeCYxhH4l8L06Ybt7qEJBotGxA9bgotXincUF4pnH7jGQGewWfHpCDnRTc9MOEliKpMu2F_KmXh01Hiy8CIIKX6T4_TKZLTBK_cEhwvBXkgaJ0QJDr4QLFvRFzg8wgDL0pvVICwWm6ygL3iZ0TO7vaMUfbcBBp_OHDEvZvFEyG5evfL2ggTLbEc3dwAlXwCbdT6ySptpFTU7jFoiq-Iw0EeDfh8N02EsLfb41704MNJxJOfWM6rHFY8PdaOIIW6r44OERx_G-YprvFr8g5KddBreQ2G153zVLy74m7Nhk8gfNVl52mpdyRq4DLmzsrSrtKp21Ly6pI5xBtEhc51VUXL6ExJ19tIn4KWYudY3EGDz_B81UBgcnlnrCFyEeidbjYxBcl2zNLAM2lrLtSmqzNAplVu_M2Lw1uigFnbGHbocomMfIY5oiYQE3zkawybOYuqvi6hDAjsZTh7WfR3qzDklDFM7GF4R4lgJaFc-YAY0jiKMac7jQ2s1T5695aNxQXT5f7j1S61U7-Pi4cvKzF27jYqzv71yU73nPSINYI4-2j6StATZf6On3LI26TGq2KX43c82iQAq4oPxkzzH8j_3MOYz1j2TRU1yPVt3Es_rlRgKtELxyRhuTY8OYhwV-TjS6VOJe8aaTEDZE2KT4fg8Mzje8k3qihCYuikHjJxUMt3_3BEr0s3RT3er2x_Gijfmb751CgPxm-1fjqhp_3XUzQlL9vSwQyi-BEJTU-BUBbXzNrRygbMMWOA0hKiPIN65CXbiXVTV87lFdSAvrvV2AzmjmuNlZHdHvrxqyJVeftG3nCMd9y3PbxcY1lwbkVdY0-SOKlM2VPSqNYYRjfIxtq5oX553orKhlxrDCIC53vURko_SXTUODt2XpBLvFCqPgxFY5FK7xAOOeXrJWBrOIz9iR9VnJD2M8GqSTVLgV_wJvuItTfQyCfMb456-KIeTLKfwbQQMBi59p2zfEXa6IYjJNTebW5iv8cOreAfN129OMbfGJ0oShg62WC5-xK9WkUhpBnUhqQQ98shQHNV3ZBvqCHilTo3Wm6_edQ6Ps6xLPNd-F23MPk_JgKAno2wg7vRrq2MotDVfcPQ6dXW2Fy3Gmb6udDP6LUW14E1F5uW7t7GDMjiL5IbBRMMIIiXIu48GJqhJCjm5UMV0chr8d-v8_lXChzGElm9TvDFSeTf13o29QHWtK8mRQsem7pmLHWL6OooI3gJH9iNxvUx1gHk8lmqiYc6z2o0xHk8tsdi4-XXEe4tw2Wn4c4mdaa34_KHi0fA77NAAZFm6c_4EMCuC9FO7wUtHPVUIxCAHFLSyeEV8GeK_-NE6z7lauc-VAHOHzN4eILIEPp84kE4P_YM5o4Oj_P55HuiNQ5CjnrqkzPwjSU3LiAl_IFL_vdk_qQ1naECIYPWmY3uVRDw_yYn5cvGx25SiUhtKETTrAEXwb6dLSTumZLuuVEMDeGDDBC_c0WvuVLGq9RGQtIhzQ5-Zv2cSwSr6o7kQDkw_0UfmOT04L1zkbCYDY8HDDdlmawpf8CoXXYVbNUV5fPdITvSQU0NnMgYwpKaTd15KmfmLbTT7TjsVBcI_VDDfvPmS-lbZSXTtzNMHbZ1BHCy-_-2ipAcltnt_Egtcio4r3-B7hILmpulVVani3SERvgWHXWW4tcFStBx9oCS2ap3d3nOUNwUclr-XieJ9YxmL1vRxQrScq3Brol5lSgkqNUm9OtIwTEIxmCe4HF4MjhOWSUJK7SOyEX3gUjam7Ho150oa8a87RN59uIf_jroCN2V0nmfF6KJ-FIeEQWWz48Vur4zXPAO-BUBWpsUzORmuMuv9tOUQ647H_wWpGc2LMaECm7MNdbuGV02gioMMNPBjQA45eWzqj2s8aZotw3muw7guNxUFuMEKYkYtWWD7Qw5iAGQEID354ms62mZ28VoP03A1fvFxHG-cWYWQUMyNOfaJZIJgQEVcd04YmUCUFbIpFxbRmeuaTiM5U94sMe0j7QwBtgsqdlSC1cq-wZXVBc3n7wNngij8yCWmoWRNgwL5szwdD0CpSBGjvUszh86FCOMHB5cqocpKj6agTWYUVY8ryJB38B3pv_k4uE3vAccCmF_uPiVlZTvSiXUR_32pd1TDiXmB_Zb9cjbSltwrgADJsXP1C_7HOMLovvEI58DkBHC6mgd-i8zvlkD11VyovpeWWf7Qa6GO4IUdCSMX86pLebTgCXbCdjh1l62rDuQmCNvyWr3AsMXTvIf8w6KIhl8BA7BZERqn79bPsaibQyYffKqNwY9uzMg0S-jYmID11va6_n72zl8ujiNIYv3ya-ZKGBfN7Sj3v3bvKqogXvdNNZzBnBEaZDTY2368AWfB0qz65Jqq7w4z81NrrpVof0viGxAqoEGP3rZopPcMQYJzSCzjxH60PyoZm9S7Q7KCUpKmvljku4H0EOYFCiddzuFTMtJskBeqAhHdMQDyvOw9Zv4QjxehF4dYp2bU9N7z0UvKpDSEX7Ot17i6RMBO_TYq9RQB-bOGfqI8X5PzBUU6YH1frwKlIasAZdBlMWITaRFIi9wYfkNdIoihXTUR78eghYdv-uI-luoKCcT4y0mW7JOH-0TURGCRYptqClJIS_Q9D3npwrqQkryNdjpA1f35E0F_a0xfszojCICpzs1ShQIl3vskICUtqwbZbiUf0r146lBQLhERlNx2JtERRyeNpgT8UNJQJOcKdZVkT03Su1tB2H0kjTdNdXgxPOh2pVgJtU899OcdJllwZktSJZpzp74-GCvd4HLCBg2E6qITHpBcyF-jT8TGhoFhQRu2149_iXiWjjXmNzkfiIkY7051sONbCbClncAjItPpHT5wwrGdFzfWMQYCpwrp9iyWijxL-wC2R8BZxIjG43qhL3bSA_Ec8RgPUzVAyWlZg4VA4epOA44Yr3lEkADrd48fJcm3fOIzHHp_Dwo5qsEHgZMsgXLzjr0BL_WFqTPzG_LuVfdXKIQ4yWRM3GKGvYGLvUV3p1pk_sjH9oT-gWJiSG0riVz1P8Ru17v75CI_UgEOMiTNKBJsupq5RtxQZxopQpraPuPrI3uBcpItXcpSURVu8VBBWhas9SlprRtNt13hAz7oqykjQ0fPHcGSmx5omWqg45G_NklKhfBOWa7e-pvX15xQH6faYISDeJYO-1fmGT2VDGBl9peKanUCf-15r-I_PBLSFSE7AWog8eeGhqEEEac9_y0M8cBYtoMLnwNlln3lnlPNLEUMiMUaJoQn9M9b6vLLvE1xG_y1dWCetn43fKZaT1xrI5XmyY4fkDnM98Wyg4tk97Q3Mwn8-Ul_Yd9BsXo1DSftE0u_5eKmUgirxS2Iw4ms2H2CJlvOCrpN3eQLXfWTOgfLNMpBEEXPxlR_cvijwDLv_DFpf4KaAwSBoenHD6Y9WVqu2K3nWGQcl3unlbxIMHC_VwAhXRMvj0fUiabTKPBNKHMHwnL7Ya8mHEH1A2peG6Ea8SXWYg1jB3jBgudnCwHBzqO1-Wd0f5VGm8vAfh9F4p0FOHJncnQbD86Vpd78f_mWwnF_mJZmX680We_P7mUnE1GYOy8wgvtLtPSkUBbL-Uu9rRh41YVR2eiFYwW-Obpyb8wKVxD2EDXadXssquQ01PaCnWG5ODQ4l0XBrxDV-puo09XtTneUZ7etFUXlZP3IapViJZcs-3m7uHNQQNDb-0hdjWAyg-42T0ZVj3T0sgnW1YxQdd0M9U7M717_e0P6NK5AeJylmm5GrzVj3oVndWBUw4iPMqbcOy4BAA-3CE7ixUYSe3csWuuM3tJXf2s1Een8gm0z9XLGglRMBbshkt1Bv1-21FuWKGHRcPrErK8aado6zYDEHHqBjumuMVtUqRK7Q8BYDqBmrJDWI4S1tEigNW0pHdquFaOLnuusLVcbX3gHSlbu0-IzaUK-HSS7FMu-l9jUhg55ihm8Eso6ELDaJ-pqLfsG59u-NjykvDnf2VwKCPF3Y6vu6HbVtqyqh89KUauCWfT4jpE3h1Mo29qQ7dUaU52ac1v062X0934XgCH39yONDOYTHFKhISI4GHwchuI-FTAgxdhIQXBX8VUusBK-GQO642pnUgnM9Tj0Gx5ZmQiyCHQUJV"></p><h3 id="时序图"><a href="#时序图" class="headerlink" title="时序图"></a>时序图</h3><p><img src="https://www.plantuml.com/plantuml/svg/fLFTSj906BtFK-oC5zxWtuKtJE55gfDPo5QXQSA4nPbw1TOYz2-WG1bGAzLQnb4AOv6sfFLbs4suuXNyDWaGnAjwaPdixZdd-xwpPsc2gWJPbJxxKMA35ZywOTTLjdqoRlN7xxEyzsfys1aVrraXpp-M99MiKVISO8KOqgFxY9kbqTMNqKM3xRHuFsUtTpsqtNZj4uYc-709PwYkPJPYn40FfRiuJdKZ5DCpceADpL1SrwYXgo6YqGJT32cOuXXE4yc58R-nSXqXd4ORM4EI1_HFe5bne1h89_32DzQy4Nj9EjM0iNgc2qjDKMxxOeicfuBEsLU-jUqBAeJYX3f5LyzvvL9iltmsrRpO6Ws7hW1EhqkYiNkhTs8gZgy_ZOfsmixl9fWPj5TG4oym9M8EII4Bozb2DIIWpyMI58MzeMohvjoKUV6I_spFyJ0cGEPuKPitptcjAoZ5DxpTOXyEW-M0iL11JQ4mixBiTDTpYfarvomNw2Wb0UHV5PpJ_FYul5m1658a4baEIIIoM9ecGSf5ySzPi8XNkto_CoyDvn9yG328ubLUMOF0eBYkwaO4DgEox0cmqW4pwwAllUBuRSVU-SMpEMQMdVx0kpzPNdaWkD4dshB6n2gmwtUpjB7yFl_U4hRtp8crDx8QF7l0FmqcLd4c4nmOKhGu62J5Ju1N768rdmfI5E32Qf4g4XM6phsCWNS1F-081SaBhXkkwsnuvNGwGU_1zS0JVFnVL-0z31IUscvNZdZ13xZJwKA2PFalPsR__gFo9MvhrZBzjePvIdy0"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="个人项目" scheme="https://huos3203.github.io/categories/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="电子巡查" scheme="https://huos3203.github.io/categories/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E7%94%B5%E5%AD%90%E5%B7%A1%E6%9F%A5/"/>
    
    
  </entry>
  
  <entry>
    <title>电子巡查项目设计</title>
    <link href="https://huos3203.github.io/2019/06/11/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E7%94%B5%E5%AD%90%E5%B7%A1%E6%9F%A5/%E7%94%B5%E5%AD%90%E5%B7%A1%E6%9F%A5%E9%A1%B9%E7%9B%AE%E8%AE%BE%E8%AE%A1/"/>
    <id>https://huos3203.github.io/2019/06/11/个人项目/电子巡查/电子巡查项目设计/</id>
    <published>2019-06-11T07:03:20.000Z</published>
    <updated>2019-06-11T07:03:20.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!-- TOC GFM --><ul><li><a href="#工期预估">工期预估</a><ul><li><a href="#整改">整改</a></li><li><a href="#录入">录入</a></li></ul></li><li><a href="#用例">用例</a></li><li><a href="#时序图">时序图</a></li><li><a href="#类图">类图</a></li><li><a href="#活动图">活动图</a></li></ul><!-- /TOC --><h3 id="工期预估"><a href="#工期预估" class="headerlink" title="工期预估"></a>工期预估</h3><h4 id="整改"><a href="#整改" class="headerlink" title="整改"></a>整改</h4><p>二级布局器入口配置/电子巡查底部详情 1<br>复用旧版电子整改管理列表(新增过滤器)待定页 1<br>电子巡查记录(列表/过滤器) 1<br>复用/详情页(数据源变更,新增视频类型) 1天</p><h4 id="录入"><a href="#录入" class="headerlink" title="录入"></a>录入</h4><p>电子巡查录入:<br>重构录入界面UI/详情页UI(待定问题图片布局) 2天<br>图片编辑器 1天<br>检查 1<br>联调接口串联业务层 1天<br><img src="https://www.plantuml.com/plantuml/svg/XPBFRjD04CRl-nHxuuAbfW8aBZn3fHoZ75RsjZ5OjkNTYWAg56ZJ94t_0KaZsgQH6qB2WRGWghPA22-JNTjlmJhh9hPJYPizytspCxyPeY83msK8g4x5XrU_PZ-Es8tBsrrsq-LdxSdeoXiqWOfDYXrOm4Z33WYA9_xVSd1Mv3y_-9VRRE0-PfKTlzUH8RvNzKezTj1cvpLsEcQLJo8x6GxPhilxBcir0JQrg1Im7UibLYaa53cKmEMbp7DbwPcIoK2GNJSrz0OY1qFLi0ZMG1RHTISLKvH4rtyQhDHL591RZEOX8Z1dcOPkuXL47Sl8GsYPy5s1h6r2Q20Y6dWAHNq2Sa5vdvzlIwFNs0jQ5zBkO8AfuUGZUIQIIw5_-OrlbGBtMceDHyCKwSQ2-7JiLSlUwDWVVsHV-b9iwohMT44vhUQTeXWXSE-2OfNNliyCbarroynYG-1RT4rkV_dlwvFR4q5TVFXNM_oWomuxzvrPj12Qml5VhsucpI9bmcWaR_YPjzfvM42sZKq24KqXV4IWMATO0niLMQ_66xzv_OvLchxR3zSG_H_kof1yVbNVM35qGYF-zgiP_YVtGqzjti3rZdPIJcbCJfjOTankJtjyoC6-xdlrldncjh2mhxGm3YyELJhU5jR-Jp8QvW6ICn0HHJ2_B-L5x810x9R2nFnOGFnmmbJgBC32dSZ2icim1pejEyS54kp2v1GEY1Y5WTdi_m00"></p><h3 id="用例"><a href="#用例" class="headerlink" title="用例"></a>用例</h3><p>用例图<br>截屏–标记–分组到检项–更新电子巡查</p><p><img src="https://www.plantuml.com/plantuml/svg/XLNBKkDM4DtVhr3DQiPbcHecAzMO_Np0V01bb4328sNCtWp6RoCJ_21W7YOYzb0WO82nBTlmC-ehQJM_aBxg6wD0kK9vmrM_pkdJtQcbrBAkkBK7kAf2hyrFpc5SX-rpfty0nRPRwpgF9JXyP0bzDQKdbKLzVa5FCiXddRxfz2zujmr7JNvq3jQnktD3zkv1XXk6ztJ3tiSKT7OBENwQywmRT7E76JORKxXHTMoJaZ1zTK76PHlhUc9-NLT-JIdpwyeRdhz0VyrF7tXFEU-fvNPBKDs1dIxVpS2M0URzZr4PK_FcTrxS0wE1DK3BffpipIJSodpojo0WYqHaGOK1l-j68anLbnPKbRrdyJYSs6uxpVSgphZ57pOnMJpEeDKD1tNwHO7AJnVSsj2zh47l7BPxJC4_nEZdAkwNGPJNhdbvqpzhUOLlaC_nofd0Z3wyaUEjox0Fbb4RW9d3OgGRBpLuxH5_O7QYl5donfTH2a81MIm6nhK85Yeq5cDKZ_kjwGwpCpBHLTCPx_7J7emCw6_1RJh4IM9HJqn8uN-biVL-Uq0jUkPbTYelrmDomcv3TXkiWVTqwBNBiiTWbNc-Yl0WbtK6eclOARH0QRt89UXqxB9hTzn32yNd3lVuSIOAnXSllGKx9t0S2109n383Xi0yGFW_HdclrnKnReTE_qgK8TyBMFuKafxXR_o-C9_I2NyyZg4FxtdZvlCdJUhZ9I48-GEIyfeB98cCoP608zueHNmzMdxxGTPBcO8H-lmfq8COc7mFtIRvnP3LRuAFiwy-KWGC5RBw45DGWv0RFbkP7JJqpp9U9n-O_1HJLFNZpskhAIMnjhoMZ2VrXJbKjZCwbJKXWk89cBVU_RdVjFop_OypmdmEmKvX5gdL2ALZsvhWDQclJjXEwkiRowaGsoGTqUhM39WPjvhbZG7AD23QinxTiHMsWJ_AOQjfZV27-vvbahlS6Y_QEU4AyYPlN943vM2yK89YLtehv89WnAzlq_CqzAeQYJZzYjHdiSlJcvI0GaSYgXeMNs9jPMKfJ4Um3ec-VpsG1rvj-OVPi8A4Qavi76r4m2jMb1nvgu9x5FxiJXNeQTk_A8S9ZGejtXfU9-kVxLBhgUbCXWpY__yO9HOtbfznK8-eLB7lntN24OBdFBNvvZMjX2YCqj0foSxkNqFrRrw_nuKu0yOkBYndE1JtOIge0POezH6GJI5WXEgtAQXdjA1I3-wGiUizz2XyrElTuLhrSdVqFqwaVnJiw71UQOKBmD-kq1FExNHA60eUvseEZnUg9pX7T9fGWdYi6DuqyJMuHPg2ToMyDh05i7b0Lua59i8ssD7QPDNIdfLha_QtiA9Lfj6-cUmOH8HBXSazfoQNVbbCeR6SH8tuaSgNZq5AagOc9HF8G4eY0Coa0PM7pTU8MTZ-xWmRZbro2rzPy45Ol0tJ_axZXGw_g-D0KUFf-R_M4_hVQQxL5chQtGy__mC0"></p><h3 id="时序图"><a href="#时序图" class="headerlink" title="时序图"></a>时序图</h3><p><img src="https://www.plantuml.com/plantuml/svg/VL7BJjj05DtxA-O36ecr9NVF1_01nXw9GB2HcRHbvxGaDgd8GuH7crIXa8Ye8YMea40Wz6TyPy9VCEEPsCw6pOmzzznppZsNv4a18zQwXs439hzfjm-pOoZtwUaOfdLelsWMTWZsq0OsRUnfqRGolxg4-jVeeIRFkLzcF_TPgmlD6JG7jDFzGCSXBTr0lVdgbtWDgWFgbsXd2k6O_qQp8rORQTYn5QTc5edh5BVNkSoAPbh4zH0D_t1nPEwYJQ9PhaCyju3eUJ3_Eu997yeJKTeslIs5PwqdTjqIZxPdVkQaYkOae9rhyKpm5pv6GXKzLAFdS_Wn4BNYJi6DdQoxHSSslJr4BtqHXInR6zZQubKUH9xi8HcGA1JokqG8vJ-P10kZcmJbSXzZNxeqAubOxGOkleaesY_i8D1idEqo38CUFD9_0rarZ9Gpdb0SCQySJPVW5AGcbbTg8Fh_2uPdMIq5JFXa9ZeF2OQdq0kMM5LWydgFLG4pBx5hFfKAUJ5Lehl8Mv7bSl3imzLt2KyT96jPV2mtG-zsVjT_3Gv5qn94BKoNX3HiGBNBHS8Akts2tZvhLB9k4vbKUR5nTSUaOjb8HxHzHqz6QwjP1WLx0m00"></p><h3 id="类图"><a href="#类图" class="headerlink" title="类图"></a>类图</h3><p><img src="https://www.plantuml.com/plantuml/svg/XLLRJnj757xk_eeHJ-3Kk2HlIng9Muih4r0S8qL2HSFks1vblUlkZab95GaLKX8ACRGXGS64ca1ZLI85bHOQS_apdlNorB_GixFhNMDmYn2S_SvbpdpdCemoZI1-kiQVxjRNbYusj-i7LRvnvdo0txAaaJH3MO9LOagyLE4ljkpISxwuvSoTrj_CywsFzV9ixNZHETzmoalE-Lwj-ixtj5_jy-stdgaizNGZ-zsilRKBeUrAcM--viLrU-DGjl_w_kBurnW_dkC7ixMJTRxqIhe9niMLsiUTsl4RlbYM_L35LUVF8tljq7xvTmm-mALMhOBUEyCfblZocaHqrKzNKZHiMQXZ33FJq4PrZUfad9970uRk0XenEn2sa24K27qd8VY9Hld1MtlsVRqw3xA0lZ2D74h3d_61NW7SJIQPIVKCYbZCC4bS_QGLpXhvkpX719oAtyTJcZWPHLX35Ah9ISGNJksrVJXjSj8xltFQe6gNeb7buHYcZxFOw5CODVGhsaJXMuhrJBCMDQa7u7mJovtn19qcL4yR5efqQI37GPQUDDW94eBx1s27HzO0qJH1aG92UtxwHqSJY5g3X66g-Kp4TKOon1IUzsVo7XCZmmdyU6R0fLua7S_X386qD40zkTTdBBJnQADJOrc36PVXHZ562k8IVQQ9PsvxcOyOAj5Gv4w4CfApXAQtBUEeCzxliTX5ft0ghnbOzRxbJc3JWew2RlAyfpH3UUWxkbntVft5kWgjbCedm6qGCzpb5G7Ol4IcruK1fU5d2x50wXD9DnX1pCWZ8zraAUpupdBzPOKVbM6Ml462ENHfjdyvuYV5VqwMU76nld7Cd_vX_xnSEorTp5QTirNa3WPouxOKML0LL3adY6jRwbYiH-OlAlQpSuHkoZ3AzUSB2DsIaVF-XuljrJR5RvqQvgwSNZ-WQmI1-5pHhxte12Yv-wzXLDyxuolBpj7l_6o-9LZURGpWADkmTSvBzSgFrzgAc2bJyqmJekqoIOPPmO86zYfFrDPqCrGDyjWuj7_Q4oG9f7cuj8ROspH8eO6WsBK1x_O4XwUAKSrb8DkcS0--zBeXISnfVtrPGcmVyGQQnYOooJS5OZ7vg-7KlSGzxwFTGDmGNP_59b6Rbmw467AdppHqgYJnD97zrfUR4WmjuhgL1pbiB_3_d-uABz-NpyUlr648Q3GLae8R_wVItRojwgItgA-5hxDF60fsDy1LNCzGLb2lEe3vTVWOLQnMR9ogn6yJ2gDYfh52cdVk8D581ZCIJ6N8slNxwyhMlwJ0gXekJZV-PJK4RrL3OaGlv527-_I9BDpdpq_1nGP96XSqXZv7dtqQYrrKrvqFEu5o1ES1j3TtdONVU6aVXZjG9GbMie7INYdL3xS3PO9QBF1xzjefLzn4mWSg4etUyLzhIUJJ3FXZq0o9Lqi0GGmP-SjOl2QkVaBt8VTPl8nu-q0itiRStkxk3jUax4eCzXlGqEEw0TRFz66ggaG7xC5GKWftQiCLoIqfo1DwOwbEw8sbEg7ValsTAWM38-xYNLHgj8KHZOgm_m80"></p><h3 id="活动图"><a href="#活动图" class="headerlink" title="活动图"></a>活动图</h3><p><img src="https://www.plantuml.com/plantuml/svg/LOvVIiD048VVvnJxc5oXEKqX6ne8KTezWANQf56eOYmjjJR-Wo0LX59iIT9S9ZCRdxo2swmMdAUPttpVxWXNU9pHqrfU3scqetLAcxvCBy7ZZc0TthPv5oYwhOen9Lii1nWjwq7ndLzf1-TxEGgqgLV0VVlNWvveTmMqA7nJdAMQXhF0TGpTcanqk0ygOFyIPiWuawlO1ARgw76lnmsQ17I_alcatj_WBFr3cXHV0Wtwjkj0goeN-3xLdlfJZwP-fYvZd3-OwiQJqoE_ZQeyEHpwV4RBrw_77OP3cPqVaiyCemJ33opky4AjDbQZ_W00"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="个人项目" scheme="https://huos3203.github.io/categories/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="电子巡查" scheme="https://huos3203.github.io/categories/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E7%94%B5%E5%AD%90%E5%B7%A1%E6%9F%A5/"/>
    
    
  </entry>
  
  <entry>
    <title>暂存机制时序图</title>
    <link href="https://huos3203.github.io/2019/05/31/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E7%94%B5%E5%AD%90%E5%B7%A1%E6%9F%A5/%E6%9A%82%E5%AD%98%E6%9C%BA%E5%88%B6%E6%97%B6%E5%BA%8F%E5%9B%BE/"/>
    <id>https://huos3203.github.io/2019/05/31/个人项目/电子巡查/暂存机制时序图/</id>
    <published>2019-05-30T18:46:15.000Z</published>
    <updated>2019-05-30T18:46:15.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="UML时序图"><a href="#UML时序图" class="headerlink" title="UML时序图"></a>UML时序图</h2><p><img src="https://www.plantuml.com/plantuml/svg/TPJDRjf058NtynIpYrJ1ebrQfG_HDt3mj44YEB5Df7G5g2Zy1gAGXX2YX40KLrM0I2rG0-5bPgx9AgzGspF-IL1P63Ft7kOxPwvjf8mqmN0-OLQ3NJwX9CaOHCCxH5Q8XkXoPRTC-t5kTxxRhMjsihIj5LpTGQEnNesT4dsgigv9vttx9azd3r2-N_TgJZChJkdo5FxaRREAMAD0PyVhNF5bqP6JXggzB6hRQZQZoDfXBAbc34rDnvnzKyPXJ94DULlMIIY2rWXgULbdfL-iMKS1XeJZyK_uOpoEO5A2_0YHZ2AmqTOx_i4EEkkFeNqCPezTdMEnleKy3iocFRY-OoTjBEjuJtP140V1qCyvfVLmp9PdRbKZILLJaC35KAtRnNikIttRaLNaasCdHcQTkgNKxbTbEv3GMOKkRjY5wPQoUsdLOmrawz4K7Wj2gP7zg78-PvKUTElELUXreXquvuGI2Kx2Yua4uYwyR3YoHAqM6tP4M-s8pWS8yPBN9VWbpFleBEU6apgG3UBNCF9lN87d2akEJRjyz7vNLKWQpiPG7uOwRfmtkXBVhIGoyAHXUn26VnFk8y7bR_WnrWtPoEg93qWXcwh8Md0Ov0sB6rIZIQr145Ga0YzjYJsqMS7Kiv_9VfReXl0KKee9YFnspyYxHdcTeHdTykbvxls5SWwwPVU9y3pRbGdaylyFYfDmptmW-0Hk6eeil0NXio49lpv9k2cl8p52aMrdnUUBmQjj8pt2tgne_xIucKqqyS-lsBpG_FVA5rLrlX0Rrg3KT9zOll0F"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="个人项目" scheme="https://huos3203.github.io/categories/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="电子巡查" scheme="https://huos3203.github.io/categories/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E7%94%B5%E5%AD%90%E5%B7%A1%E6%9F%A5/"/>
    
    
  </entry>
  
  <entry>
    <title>拍照业务活动图</title>
    <link href="https://huos3203.github.io/2019/05/31/%E6%8B%8D%E7%85%A7%E4%B8%9A%E5%8A%A1%E6%B4%BB%E5%8A%A8%E5%9B%BE/"/>
    <id>https://huos3203.github.io/2019/05/31/拍照业务活动图/</id>
    <published>2019-05-30T18:32:40.000Z</published>
    <updated>2019-05-30T18:46:15.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="UML时序图"><a href="#UML时序图" class="headerlink" title="UML时序图"></a>UML时序图</h2><p><img src="https://www.plantuml.com/plantuml/svg/lPBDJi904CVl-nHxB1SUe3tx19uyDdGh6zjYsYN66yO8YM3WeeaVXsf0EG160mQnyZJTRJdv2kv70HCQkR67JMRcF_l_pMG99Ww2x7gSTEgiUPLSlB39MT9lqlivA26F81-MaMaX7opE-ydtUzLrM1ZHgCrk6l7Nnq_KeiFd-3Fa-NGqJqUFx66mUAe3v5bP7m01CNq2TFMy0R0DjNXQOxUl_APHM82aZ3m0-LbfP11FB-CeL06sjPEgKaBj50K5cLKzxKuywoePSWB4fPQbwZh1GHaRGAGrsdrBnxsiiAZLQ6Dc24viopfSSz7kdU2IIhlY7srX4n9e7fhulo6uaNfBBrLS5nE3hwLol7RcdcpOovopEG_szWlBwPF1GC0DUxbBM55k06pGvX1lRrhHoyfo0X7ydK92pbfvaBjQ8oSe5dVkhZwHl4NY5m00"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="分类" scheme="https://huos3203.github.io/categories/%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://huos3203.github.io/2019/05/17/%E7%AE%A1%E7%90%86%E7%BB%8F%E9%AA%8C/"/>
    <id>https://huos3203.github.io/2019/05/17/管理经验/</id>
    <published>2019-05-17T15:24:54.481Z</published>
    <updated>2019-04-24T23:21:29.795Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>我们的管理结构：总监&gt; 部门经理&gt;组长&gt;项目经理&gt;开发</p><p>我做过java开发（web，android,黑莓），目前主要做iOS，担任项目主程，分析理解产品需求，预研具体的技术实现，解决重要的技术问题，完成核心功能的编码研发，有一定的沟通管理能力，负责组内任务分解、工作分配、代码审查，最后确保按时按量交付。<br>每天会利用10分钟沟通昨天成果和今天计划，明确组员每天任务，把控工作进度，做到及时检查，确保在开发阶段按照设计文档和原型无偏差。</p><p>我之前也是开发出身，后面做了项目经理，开始管理小团队，再后面做小组组长，管理下面的项目经理，我们的组织结构是：总监&gt;部门经理&gt;组长&gt;项目经理或系统设计师&gt;开发，关于管理永远也有谈不完的话题，分享下我个人的一些经验之谈吧：<br>1，让合适的人做合适的事情<br>虽然都是开发，但有人适合做前端，有人适合写脚本，有人适合写后端 ，有人其实合适做沟通，因此要努力去识别小组人员的特长，然后发挥他们的特长<br>2，懂得放权     当时我小组人员最多有二个项目经理，两个系统设计师，四五个开发人员，我每天就只抓项目经理和系统设计师的工作，项目经理和设计师则要去指导和检查开发人员的工作，其实这对你的手下也是一种培养，将来他们才能成为你的左膀右臂3，不同岗位工程师，职责明确<br>团队里面开发，设计分工要明确。<br>设计师的主要职责就是要设计出能服务于整个团队的框架或工具、担任主程、负责代码审查等，<br>项目经理就要负责沟通、协调的工作，开发人员就适合照着项目经理和设计师的设计原型照着样子去开发就行了，千万别让他们去做一些沟通或者设计的工作。如果你发现某个开发设计也很强，那你要考虑是否升他做系统设计师，而不是还做开发了<br>4，晨会<br>每天上班前利用10分钟时间，团队围成一团，沟通下昨天的成果和今天的计划，目的有两个，首先对开发人员每天的计划要明确；其次，上级要对下级的工作要时刻把控，不能发生偏差<br>5，检查     即使照着设计文档或原型，开发人员的成果还是会出现偏差或错误，因此要及时检查。检查的方式也采用逐级检查的方式，组员检查项目经理或设计师，设计师检查开发人员。检查的目的仅且仅当为了尽快找出BUG，让组员成长的方式，千万别弄巧成拙，让组员感觉是在找他麻烦<br>6，犒劳<br>周末到了，三不五时也要组织组员聚聚餐，爬爬山，唱唱歌，实在不行也要买点人性化的礼物给组员，比如电视盒子，移动电源，电影票等等，千万别让组员觉得你只会管他们，丝毫不会关怀他们。当然前提是你有经费<br>7，阶段性的沟通<br>一周找一个组员沟通，并且把每次沟通的记录记下来。每个人都会迷茫，一定要站在他的角度，把他当前的表现，发展瓶颈以及下一步的努力方向跟他分析下，我相信只要你是真心为组员着想一定能找出每个组员的优点和缺点，真心跟他们沟通，他们会感谢你的.一口气敲了这么多，其实还有很多未提到，其实最关键的就是几个指标：团队氛围一定要好，不要搞内部矛盾组员上进意识要培养工作要有松有驰帮助组员成长，而不只是关心你的项目进度自己要躬亲示范，以身作则以上是关于团队管理的，有空再补充下技术上的管理。最后送你一句：团队是带出来的，不是管出来的，谢邀。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term=".." scheme="https://huos3203.github.io/categories//"/>
    
      <category term="_drafts" scheme="https://huos3203.github.io/categories//drafts/"/>
    
    
  </entry>
  
  <entry>
    <title>草稿</title>
    <link href="https://huos3203.github.io/2019/05/17/%E7%BB%8F%E5%8E%86/"/>
    <id>https://huos3203.github.io/2019/05/17/经历/</id>
    <published>2019-05-17T15:24:54.481Z</published>
    <updated>2019-04-24T23:21:29.795Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>个人项目</p><p>iResearcher</p><p>简明扼要<br>高度匹配</p><p>简历核心目的：</p><ol><li>简明扼要介绍自己，真诚</li><li>匹配度，定制不同岗位的信息</li></ol><p>由项目展开</p><ol><li>PBB Reader （macOS／iOS）</li></ol><ul><li>开发播放器中的经历</li><li>学到什么</li><li></li></ul><p>场景-&gt;任务-&gt;方法-&gt;结果<br>STAR</p><ol start="2"><li>iResearcher</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term=".." scheme="https://huos3203.github.io/categories//"/>
    
      <category term="_drafts" scheme="https://huos3203.github.io/categories//drafts/"/>
    
    
  </entry>
  
  <entry>
    <title>计划月周日目标，整理到trello中执行</title>
    <link href="https://huos3203.github.io/2019/05/17/%E8%AE%A1%E5%88%92%E6%9C%88%E5%91%A8%E6%97%A5/"/>
    <id>https://huos3203.github.io/2019/05/17/计划月周日/</id>
    <published>2019-05-17T15:24:54.481Z</published>
    <updated>2019-04-24T23:21:29.795Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="月"><a href="#月" class="headerlink" title="月"></a>月</h3><ol><li>求职计划</li></ol><ul><li>每天坚持投递三份简历，争取一周两次面试机会<br>达到目标的途径：</li></ul><ul><li>整理简历，增加亮点，定投简历，达到至少不同职位的三版简历。<br>  可参考知乎，豆瓣，狗聘等平台</li></ul><ol start="2"><li>旅游／同城</li></ol><ul><li>在豆瓣／活动行等APP上找感兴趣的同城活动，参加三次同城活动</li><li>参加一个山哥户外／钢七连 ／周末去哪儿郊游</li><li>读书会/电影（3次）</li><li>一次租车自驾行</li></ul><ol start="3"><li><p>阅读<br> 三本书：两本管理书，一本小说<br> 小强升职记（升级版）+《搞定3》+《高效能人士的七个习惯》</p></li><li><p>学习<br> 以objc为资料根据9大模块分配任务，学习研究，做思维导图并产出12篇博客</p></li><li><p>月购清单</p><ul><li>黑头针，洗面扑，防晒霜</li><li>洗牙，眼科检查</li><li>置买衣物</li></ul></li></ol><h3 id="周"><a href="#周" class="headerlink" title="周"></a>周</h3><ul><li><p>学习知识<br>  网络层，第二周UI。第三周消息传递，第四周：动画，第五周：架构</p></li><li><p>读书<br>  书名，阅读目标：思维导图做阅读笔记</p></li><li><p>健身</p><ol><li>学习游泳</li><li>坚持keep</li></ol></li><li><p>总结<br>  周三，周五，周日总结</p></li></ul><p>周购买清单</p><pre><code>- 水果/零食</code></pre><h3 id="日执行"><a href="#日执行" class="headerlink" title="日执行"></a>日执行</h3><ol start="3"><li>个人魅力<br>坚持皮肤保养，饮食有度<br>早：米粥／皮肤护理／乘车读书／导图整理/录音自训/思维训练<br>午：素食／理财置业／导图整理<br>晚：搭讪技巧／情感梳理／导图整理</li></ol><h3 id="当前任务"><a href="#当前任务" class="headerlink" title="当前任务"></a>当前任务</h3><p>hexo 知识管理系统</p><p>trello 时间管理系统</p><p>教训：要多表达，总结技术问题，表达问题</p><p>录制视频</p><p>使用trello来整理工作，日常安排等</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term=".." scheme="https://huos3203.github.io/categories//"/>
    
      <category term="_drafts" scheme="https://huos3203.github.io/categories//drafts/"/>
    
    
  </entry>
  
  <entry>
    <title>&lt;#标题#&gt;</title>
    <link href="https://huos3203.github.io/2019/05/17/%3C#%E6%B0%B8%E4%B9%85%E9%93%BE%E6%8E%A5#%3E/"/>
    <id>https://huos3203.github.io/2019/05/17/&lt;#永久链接#&gt;/</id>
    <published>2019-05-17T15:24:54.481Z</published>
    <updated>2019-04-24T23:21:29.795Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><ol><li>多线程</li><li>优化</li><li>运行时</li><li></li><li><p>简述一下KVC和KVO使用场景，使用过程中需要注意些什么？</p></li><li>使用cocoapods引入第三方库时，sdk之间的出现冲突如何解决？</li><li>在项目中关于TCP或者UDP编程的使用过程</li><li>请描述下ARC原理<br>ARC的规则就是只要对象没有强指针引用，就会被释放掉，换而言之 只要还有一个强引用指针变量指向对象，那么这个对象就会存在内存中。弱指针指向的对象，会被自动变成空指针（nil指针），从而不会引发野指针错误。<br>原理是:在编译代码的时候为你自动在合适的位置插入release 和 autorelease, (运行时处理垃圾回收就如何MRC一样).</li><li>MRC和ARC是如何破循环引用的</li><li>使用索引的缺点用哪些？</li><li>使用过HTTP请求的那些方法，什么时候使用get，post，put？</li><li>描述一下TCP建立连接的过程，断开连接的过程，为什么是三次握手？</li><li>发布后的版本，怎么搜集crash日志？不实用bugly等第三方平台或者这些第三方平台是怎么搜集crash 日志的？</li><li>说一下runtime，为什么OC里面是发消息，而C/C++是函数调用？</li><li>说下OC发消息的过程</li><li>什么是OC对象，union是OC对象吗，block 是OC对象吗</li><li>id是什么类型</li><li>解决过的最精彩的crash问题？</li><li>子线程中调用connection方法，为什么不回调？</li><li>autorelease变量什么时候释放发？<br>autorelease对象内存的管理放到autoreleasepool中, 当pool drain时,回收内存. (这是基于 objective-c的运行时特性和垃圾回收机制)</li><li><p>GCD和NSOperation的区别？</p></li><li><p>weak和assign的区别<br>weak 不会产生野指针问题。因为weak修饰的对象释放后（引用计数器值为0），指针会自动被置nil，之后再向该对象发消息也不会崩溃。 weak是安全的。<br>assign 如果修饰对象，会产生野指针问题；如果修饰基本数据类型则是安全的。修饰的对象释放后，指针不会自动被置空，此时向对象发消息会崩溃。<br>assign 适用于基本数据类型如int,float,struct等值类型，不适用于引用类型。因为值类型会被放入<strong>栈</strong>中，遵循先进后出原则，由系统负责管理栈内存。而引用类型会被放入<strong>堆</strong>中，需要我们自己手动管理内存或通过ARC管理。<br>weak 适用于delegate和block等引用类型，不会导致野指针问题，也不会循环引用，非常安全。</p></li><li>堆和栈的区别<br>栈：遵循先进后出原则，<br>栈有两种分配方式：静态分配和动态分配<ul><li>静态分配是系统编译器完成的，比如局部变量的分配</li><li>动态分配是有alloc函数进行分配的，但是栈的动态分配和堆是不同的，它的动态分配也由系统编译器进行释放，不需要程序员手动管理<br>堆：遵循先进先出原则，堆是动态分配和回收内存的，没有静态分配的堆<h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2></li></ul></li></ol><h2 id="第三方库"><a href="#第三方库" class="headerlink" title="第三方库"></a>第三方库</h2><h2 id="项目经验"><a href="#项目经验" class="headerlink" title="项目经验"></a>项目经验</h2><p>加油</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="分类" scheme="https://huos3203.github.io/categories/%E5%88%86%E7%B1%BB/"/>
    
    
      <category term="&lt;#工具#&gt;" scheme="https://huos3203.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="&lt;#管理#&gt;" scheme="https://huos3203.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>&lt;#标题#&gt;</title>
    <link href="https://huos3203.github.io/2019/05/17/%3C#%E6%B0%B8%E4%B9%85%E9%93%BE%E6%8E%A5#%3E/"/>
    <id>https://huos3203.github.io/2019/05/17/&lt;#永久链接#&gt;/</id>
    <published>2019-05-17T15:24:54.481Z</published>
    <updated>2019-04-24T23:21:29.795Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="githubCard"><a href="#githubCard" class="headerlink" title="githubCard"></a>githubCard</h2><div id="badge-container-huos3203-<#库名#>-<#哈希值#>" class="hexo-github" style="width: ="></div><script src="/hexo-github/badge.js"></script><script type="text/javascript">  loadStyle("/hexo-github/style.css");  loadStyle("/hexo-github/octicons/octicons.css");  new Badge("#badge-container-huos3203-<#库名#>-<#哈希值#>", "huos3203", "<#库名#>", "<#哈希值#>", false);</script><h2 id="音乐欣赏"><a href="#音乐欣赏" class="headerlink" title="音乐欣赏"></a>音乐欣赏</h2>        <div id="aplayer-OqyadAsu" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;width:70%;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-OqyadAsu"),            narrow: false,            autoplay: true,            showlrc: false,            music: {              title: "<#歌曲名#>",              author: "<#歌手名#>",              url: "/images/<#音频文件名#>",              pic: "/images/<#封面图#>.png",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><h2 id="岗位理解"><a href="#岗位理解" class="headerlink" title="岗位理解"></a>岗位理解</h2><p>在工程项目管理上收获很大，之前开发中使用过cocoapods项目管理工具，它支持私库：头文件及静态库，在源码库中支持pod私库配置，执行pod发布命令即可将组件库源码发布到私库中。 组件依赖：在主工程中添加依赖库配置文件。通过安装命令就可以将依赖库清单文件中的组件自动集成到主工程中。由于它将主工程加入到一个新的工作空间中，实现项目集成，造成工程的配置修改，所以也被称为侵入式管理。</p><p>对比金和工程中的项目组件开发管理，使用了oc运行时的反射类方式来弱化项目的依赖，很好的解决了</p><h2 id="工作成果"><a href="#工作成果" class="headerlink" title="工作成果"></a>工作成果</h2><h2 id="工作安排"><a href="#工作安排" class="headerlink" title="工作安排"></a>工作安排</h2><h2 id="个人金和职业规划"><a href="#个人金和职业规划" class="headerlink" title="个人金和职业规划"></a>个人金和职业规划</h2><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>两个领导，一人人资老大，整个过程一脸懵，不知道憋了几天的心理战怎么会这么失败。</p><p>教训：要多表达，总结技术问题，表达问题</p><p>录音自训<br>思维训练</p><p>录制视频</p><p>使用trello来整理工作，日常安排等</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="分类" scheme="https://huos3203.github.io/categories/%E5%88%86%E7%B1%BB/"/>
    
    
      <category term="&lt;#工具#&gt;" scheme="https://huos3203.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="&lt;#管理#&gt;" scheme="https://huos3203.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>&lt;#标题#&gt;</title>
    <link href="https://huos3203.github.io/2019/05/17/%3C#%E6%B0%B8%E4%B9%85%E9%93%BE%E6%8E%A5#%3E/"/>
    <id>https://huos3203.github.io/2019/05/17/&lt;#永久链接#&gt;/</id>
    <published>2019-05-17T15:24:54.481Z</published>
    <updated>2019-04-24T23:21:29.795Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://www.plantuml.com/plantuml/svg/xLPVRnD747-_Jt7Y9Cw6jLsGgagMSq8gGdqeVK1zgwXriS-n6_iEsHTHYQOYQKmSnubJIEB4v7-T9XJy9vX24iVnbxdTEp_n5JgxU-Sa1OIAUEn8bdPdPsTsPdxpEvifCws94MaiaoRxstXZ5ZyzxU-is4yRPB59IXEtRqgA4DDqKykAIKsDQraX8k6rVLAluTeKUTF1nIsoDOrhhy1Eq-EkZI1VuIBQ1ntyHukip5FtwnNHrSk2J4ysPiEnj9hB8NKuPsRLc8bID5H2ZMb8rNN3LCsKeIDD7yl03QVHwrSQU7Cpx0luxRq9iZQ3V9BVwgsJOWtvVlNZKjvJN_NZ_0jOoOB08a2EDE32dAH48XAPUOOFbd3po3dObXH5LBtpmdDcya0814233pR8mpsxCyMK8kXaN7ZKhoxQB_uC150mY8Q6K3GgGqq6RxDwZVvk2mpWGaJAqGnY8IyzfkDUmQMzrvAKC0-yCGjdG_JquSarg6KqIjVJNRBK6iIFHZyKA36cnmRsdcSVACgJeBXs8GhorDSlgFt2k22JbLExTXpgLnUSIXbE4Fp8yX5fBxcbgC-8ED_kBpPmlS8HmljtrZRUgsGghWrA7d9Tq2G06W4GaOE2dkVRThjZ7_TmRPgqzn4kDwtEBku-mHDLUt7VEfqbwxlmOEjm7XTQtDhfRP3vNUkm3Yq9o0BWH1ClGLhC0twKnuqZIRd4k-egtLP3U5ohEjkbyshNm_lCt_LAKIvIUt0bCM4OPqOkniyml_OSjqwjRWyI2RCOLdVExZR28hUNF75V497IMi8CPLCZIJDa6lT2muPf6Xbei960GsFu9urXI8f8_PqrP-Obl130pFgGKREZSUE-xZJhjDR5BVjbvUr9cIolMTqdiC25hVvg3UeCQ-jm5XSUypLfxv2__nfeHFouzCttjx_bu-mbUfa9JOo1iN2MgBlY1fTXI76-Rk_DkMPRR_19EVoT4TVG7NYwge-aDNJBI0D7e5jPDQEXhzF6M1pTL4rrMCrfif2BgK18aEnNNtx1fkL-AcucGqcDrWGUTK-DZQeZj5GP8pwMrlXaHEXCivVma33JzAxa_5OYgqrMg0U2wCedyO5t-R_nWdVhy_E3v_a3FF6Hm9-5BxmOuy0SWdo3YuX_xrA7puxxbLSkEFZGkXlHDRm1c0S0vA2Xj9in8nECwHpR_FA5tb5SiSalJjgJHv14sFUBuhSxUsIcXtnN_1HiXGKH-Go_Cr657OAehwtEieH-HkFeAlfH1D80VBEhWO0VD-XEV7jIyWM3VcUr2ZlAuovZmPU4rPBE_-On94_v18hfXMUDEXlMO11W9FqWWHDuy5r92LoqFU_cdHXGLFAwG2QQOAXyb0XqCPtIH_z50PmGWL7wqqKOztF3IrkZC147P0lVU5mkyZiNY4jnHVw_t9zORe6B-uyfOO3gFV-OdAagPNzsZTly0m00"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="分类" scheme="https://huos3203.github.io/categories/%E5%88%86%E7%B1%BB/"/>
    
    
      <category term="&lt;#工具#&gt;" scheme="https://huos3203.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="&lt;#管理#&gt;" scheme="https://huos3203.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>&lt;#标题#&gt;</title>
    <link href="https://huos3203.github.io/2019/05/17/%3C#%E6%B0%B8%E4%B9%85%E9%93%BE%E6%8E%A5#%3E/"/>
    <id>https://huos3203.github.io/2019/05/17/&lt;#永久链接#&gt;/</id>
    <published>2019-05-17T15:24:54.481Z</published>
    <updated>2019-04-24T23:21:29.795Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://www.plantuml.com/plantuml/svg/xLPVRnD747-_Jt7Y9Cw6jLsGgagMSq8gGdqeVK1zgwXriS-n6_iEsHTHYQOYQKmSnubJIEB4v7-T9XJy9vX24iVnbxdTEp_n5JgxU-Sa1OIAUEn8bdPdPsTsPdxpEvifCws94MaiaoRxstXZ5ZyzxU-is4yRPB59IXEtRqgA4DDqKykAIKsDQraX8k6rVLAluTeKUTF1nIsoDOrhhy1Eq-EkZI1VuIBQ1ntyHukip5FtwnNHrSk2J4ysPiEnj9hB8NKuPsRLc8bID5H2ZMb8rNN3LCsKeIDD7yl03QVHwrSQU7Cpx0luxRq9iZQ3V9BVwgsJOWtvVlNZKjvJN_NZ_0jOoOB08a2EDE32dAH48XAPUOOFbd3po3dObXH5LBtpmdDcya0814233pR8mpsxCyMK8kXaN7ZKhoxQB_uC150mY8Q6K3GgGqq6RxDwZVvk2mpWGaJAqGnY8IyzfkDUmQMzrvAKC0-yCGjdG_JquSarg6KqIjVJNRBK6iIFHZyKA36cnmRsdcSVACgJeBXs8GhorDSlgFt2k22JbLExTXpgLnUSIXbE4Fp8yX5fBxcbgC-8ED_kBpPmlS8HmljtrZRUgsGghWrA7d9Tq2G06W4GaOE2dkVRThjZ7_TmRPgqzn4kDwtEBku-mHDLUt7VEfqbwxlmOEjm7XTQtDhfRP3vNUkm3Yq9o0BWH1ClGLhC0twKnuqZIRd4k-egtLP3U5ohEjkbyshNm_lCt_LAKIvIUt0bCM4OPqOkniyml_OSjqwjRWyI2RCOLdVExZR28hUNF75V497IMi8CPLCZIJDa6lT2muPf6Xbei960GsFu9urXI8f8_PqrP-Obl130pFgGKREZSUE-xZJhjDR5BVjbvUr9cIolMTqdiC25hVvg3UeCQ-jm5XSUypLfxv2__nfeHFouzCttjx_bu-mbUfa9JOo1iN2MgBlY1fTXI76-Rk_DkMPRR_19EVoT4TVG7NYwge-aDNJBI0D7e5jPDQEXhzF6M1pTL4rrMCrfif2BgK18aEnNNtx1fkL-AcucGqcDrWGUTK-DZQeZj5GP8pwMrlXaHEXCivVma33JzAxa_5OYgqrMg0U2wCedyO5t-R_nWdVhy_E3v_a3FF6Hm9-5BxmOuy0SWdo3YuX_xrA7puxxbLSkEFZGkXlHDRm1c0S0vA2Xj9in8nECwHpR_FA5tb5SiSalJjgJHv14sFUBuhSxUsIcXtnN_1HiXGKH-Go_Cr657OAehwtEieH-HkFeAlfH1D80VBEhWO0VD-XEV7jIyWM3VcUr2ZlAuovZmPU4rPBE_-On94_v18hfXMUDEXlMO11W9FqWWHDuy5r92LoqFU_cdHXGLFAwG2QQOAXyb0XqCPtIH_z50PmGWL7wqqKOztF3IrkZC147P0lVU5mkyZiNY4jnHVw_t9zORe6B-uyfOO3gFV-OdAagPNzsZTly0m00"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="分类" scheme="https://huos3203.github.io/categories/%E5%88%86%E7%B1%BB/"/>
    
    
      <category term="&lt;#工具#&gt;" scheme="https://huos3203.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="&lt;#管理#&gt;" scheme="https://huos3203.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://huos3203.github.io/2019/05/17/%E5%85%B6%E4%BB%96/Playground%E4%B8%AD%E4%BD%BF%E7%94%A8XCPlaygroundModule/"/>
    <id>https://huos3203.github.io/2019/05/17/其他/Playground中使用XCPlaygroundModule/</id>
    <published>2019-05-17T15:24:54.471Z</published>
    <updated>2019-04-24T23:21:29.795Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term=".." scheme="https://huos3203.github.io/categories//"/>
    
      <category term="_drafts" scheme="https://huos3203.github.io/categories//drafts/"/>
    
      <category term="其他" scheme="https://huos3203.github.io/categories//drafts/%E5%85%B6%E4%BB%96/"/>
    
    
  </entry>
  
  <entry>
    <title>SSH命令安装及使用</title>
    <link href="https://huos3203.github.io/2019/02/27/shell/SSH%E5%91%BD%E4%BB%A4%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <id>https://huos3203.github.io/2019/02/27/shell/SSH命令安装及使用/</id>
    <published>2019-02-26T18:16:23.000Z</published>
    <updated>2019-02-26T18:29:38.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>写下这篇文章的目的是为了更清楚的讲解和展现ssh的用法和操作，避免网上庞杂的文章和材料影响新手的学习过程。所以如果你是为老手，可以略过这篇文章了。</p><!-- TOC GFM --><ul><li><a href="#ssh介绍">SSH介绍</a></li><li><a href="#安装使用">安装使用</a><ul><li><a href="#openssh的安装">OpenSSH的安装</a></li><li><a href="#使用">使用</a><ul><li><a href="#配置和启动ssh服务">配置和启动ssh服务</a></li><li><a href="#登录到远程主机">登录到远程主机</a></li><li><a href="#配置使用key登录ssh服务器ssh免密码登录">配置使用key登录ssh服务器ssh免密码登录</a></li><li><a href="#总结">总结</a></li></ul></li></ul></li><li><a href="#本章总结">本章总结</a></li><li><a href="#更多参考内容">更多参考内容</a></li></ul><!-- /TOC --><h2 id="SSH介绍"><a href="#SSH介绍" class="headerlink" title="SSH介绍"></a>SSH介绍</h2><ol><li>什么是ssh？<br>ssh是“Secure Shell”的简写，Secure Shell协议是国际互联网工程任务组（The Internet Engineering Task Force，简称 IETF）制定的一个标准。目的是为了创建一个工作在应用层和传输层基础上的安全协议。避免数据的的明文传输。</li><li>什么是OpenSSH？<br>前边说了，ssh是网络协议，而OpenSSH就是其中的一个具体实现。OpenSSH是由OpenBSD管理的项目之一，不过Openssh是跨平台的，支持linux、unix*，甚至windows。<br>所以实际应用中，我们用到的ssh基本上都是Openssh。</li><li>OpenSSH有哪些功能？<br>Secure Shell 是一个通信协议，在这个协议之上可以实现很多种应用层协议。从OpenSSH官网来看，OpenSSH提供了以下几个应用：<br> 1、ssh，登录远程服务器、在远程服务器上执行命令。<br> 2、scp，在两台主机之间实现文件拷贝。<br> 3、sftp，基于openssh实现的类似ftp程序。</li></ol><p>除此之外，OpenSSH还提供了几个命令行工具，用来方便进行ssh操作：<br>1、ssh-add<br>2、ssh-keysign<br>3、ssh-keyscan<br>4、ssh-keygen</p><h2 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h2><p>下文将讲述这些命令的实际用法。</p><h3 id="OpenSSH的安装"><a href="#OpenSSH的安装" class="headerlink" title="OpenSSH的安装"></a>OpenSSH的安装</h3><p>大部分linux发行版都默认包含了OpenSSH客户端和服务器端，一些linux桌面发行版没有安装openssh服务器端。<br>如果没有安装，我们可以通过linux发行版的软件包管理工具进行安装。简单来说就是：<br>apt-get系列：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install openssh openssh-server</span><br></pre></td></tr></table></figure></p><p>yum系列：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install openssh openssh-server</span><br></pre></td></tr></table></figure></p><p>其他系列：自己百度下。<br>备注：openssh是客户端、openssh-server是服务器端。不同的发行版名称可能不同，需要自己确认一下。<br>安装完毕之后，系统中就应该会有ssh命令了。这个时候就可以使用ssh来进行远程主机的管理了。</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="配置和启动ssh服务"><a href="#配置和启动ssh服务" class="headerlink" title="配置和启动ssh服务"></a>配置和启动ssh服务</h4><p>在使用之前我们需要对ssh服务进行配置，在大多数linux系统中，ssh服务的配置文件为：/etc/ssh/sshd_config<br>使用vim进行编辑：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim  /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></p><p>以下地方根据实际情况进行修改（yes为允许、no为禁止）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PermitRootLogin yes  #是否允许root账户登录</span><br><span class="line">PasswordAuthentication yes  #是否允许使用密码校验登录</span><br><span class="line">RSAAuthentication yes  </span><br><span class="line">PubkeyAuthentication yes  #是否允许使用key登录</span><br></pre></td></tr></table></figure></p><p>然后使用系统服务管理命令启动服务，在大部分linux系统下，命令为：service 或者 systemctl<br>启动ssh服务命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~# service sshd restart</span><br></pre></td></tr></table></figure></p><p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~# systemctl  restart sshd</span><br></pre></td></tr></table></figure></p><h4 id="登录到远程主机"><a href="#登录到远程主机" class="headerlink" title="登录到远程主机"></a>登录到远程主机</h4><p>命令格式为：ssh  用户名@远程主机的ip地址:远程主机端口<br>示例：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh  root@192.168.0.1:22</span><br></pre></td></tr></table></figure></p><p>或者：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 22 root@192.168.0.1</span><br></pre></td></tr></table></figure></p><blockquote><p>注：ssh默认端口为22，远程主机为默认端口时，可省略端口号。</p></blockquote><p>执行上述命令之后，首次登陆会询问是否保存秘钥，输入yes即可。然后会提示输入密码，输入该用户对应的远程主机密码即可。</p><h4 id="配置使用key登录ssh服务器ssh免密码登录"><a href="#配置使用key登录ssh服务器ssh免密码登录" class="headerlink" title="配置使用key登录ssh服务器ssh免密码登录"></a>配置使用key登录ssh服务器ssh免密码登录</h4><p>使用key登录，需三个步骤：</p><ol><li>修改ssh服务配置文件允许key登录：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~# vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></li></ol><p>找到PubkeyAuthentication这一行，改成：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PubkeyAuthentication  yes</span><br></pre></td></tr></table></figure></p><ol start="2"><li>重启ssh服务：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~# service sshd restart</span><br></pre></td></tr></table></figure></li></ol><p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~# systemctl  restart sshd</span><br></pre></td></tr></table></figure></p><ol start="3"><li>使用ssh-keygen命令在本地机器上生成Rsa公钥对：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~# ssh-keygen -t rsa</span><br></pre></td></tr></table></figure></li></ol><p>执行上述命令后，会提示输入要保存的文件路径，默认为：~/.ssh/id_rsa.</p><p>输入文件名，点回车，会提示输入秘钥的密码（会提示输入两遍），即可生成秘钥文件：</p><p>查看秘钥文件</p><ol start="4"><li>将公钥文件上传到服务上：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~# ssh-copy-id -i /home/zhao/.ssh/id_rsa_leilei.pub</span><br><span class="line">root@192.168.0.1</span><br></pre></td></tr></table></figure></li></ol><p><code>-i</code> 是用来指定公钥文件，执行命令之后，按提示输入远程密码即可。</p><ol start="5"><li>然后即可使用私钥文件登录服务器：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~# ssh -i /home/zhao/.ssh/id_rsa_leilei   root@192.168.0.1</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>注意：如果在第3步时为秘钥设置了密码，则使用秘钥登录服务器时，需要输入秘钥密码。</p></blockquote><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ol><li>如果想实现免密登录，则只需要在第三步生成密钥对时不要设置秘钥密码。</li><li><p>如果使用秘钥文件使用默认文件名（id_rsa），则在使用ssh的过程中就不需要再使用-i开关来指定秘钥文件了。</p></li><li><p>拷贝文件到远程主机：<br>ssh中提供了scp命令用来拷贝文件到远程主机，使用方式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~# scp -i /home/zhao/.ssh/id_rsa_miyao  a.tar.gz root@192.168.0.1:/home/zhao/</span><br></pre></td></tr></table></figure></li></ol><p>就能将文件 <code>a.tar.gz</code> 拷贝到远程主机<code>/home/zhao/</code>下  </p><ol start="5"><li>在远程服务器上执行命令：<br>直接将需要执行的命令追加到ssh命令后面即可，如：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~# ssh -i /home/zhao/.ssh/id_rsa_miyao root@192.168.0.1  &quot;ls -l&quot;</span><br></pre></td></tr></table></figure></li></ol><p>即可在远程服务器上执行“<code>ls -l</code>” 命令，结果将输出到本地控制台。<br>但是在执行一些命令时，远程主机会提示无法找到该命令，这说明需要设置远程主机的环境变量，可在发送给远程主机的命令中增加source指令，如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~# ssh -i /home/zhao/.ssh/id_rsa_miyao  root@192.168.0.1 &quot;source ~/.bash_profile &amp;&amp; ls -l&quot;</span><br></pre></td></tr></table></figure></p><h2 id="本章总结"><a href="#本章总结" class="headerlink" title="本章总结"></a>本章总结</h2><ol><li>本文的命令示例中，均使用了 <code>-i</code> 开关来指定秘钥文件，如果使用默认秘钥文件：<code>~/.ssh/id_rsa</code>登录，则均可省略-i开关。</li><li>其他用法后续再补充吧。<h2 id="更多参考内容"><a href="#更多参考内容" class="headerlink" title="更多参考内容"></a>更多参考内容</h2><a href="https://man.openbsd.org/ssh-add.1" target="_blank" rel="noopener">https://man.openbsd.org/ssh-add.1</a><br><a href="https://man.openbsd.org/?query=ssh-keygen&amp;sektion=1" target="_blank" rel="noopener">https://man.openbsd.org/?query=ssh-keygen&amp;sektion=1</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="shell" scheme="https://huos3203.github.io/categories/shell/"/>
    
    
  </entry>
  
  <entry>
    <title>iOS系统的shell工具blink</title>
    <link href="https://huos3203.github.io/2019/02/27/shell/iOS%E7%B3%BB%E7%BB%9F%E7%9A%84shell%E5%B7%A5%E5%85%B7blink/"/>
    <id>https://huos3203.github.io/2019/02/27/shell/iOS系统的shell工具blink/</id>
    <published>2019-02-26T18:11:37.000Z</published>
    <updated>2019-02-26T18:29:38.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>用于iOS的Blink Shell(为更多Shell util进行了编辑)<br>Blink是第一个利用<code>Mosh</code>和<code>SSH</code>支持的专业桌面级iOS终端。因此，我们可以明确地保证稳定的连接、闪电般的速度和完整的配置。它可以而且应该是你一整天的工具。<br>我们没有创建另一个终端来修复您的网站的运行。Blink从一开始就被打造为专业级产品。<br>我们从分析什么是必须拥有的开始，我们最终基于以下三个概念:</p><h5 id="快速呈现"><a href="#快速呈现" class="headerlink" title="快速呈现"></a>快速呈现</h5><p>Unix服务器中的dmesg应该是即时的。我们等不及要渲染了。我们不需要重新发明轮子来实现这一点。我们只是简单地使用Chromium的HTerm来确保渲染是完美和快速的，即使是那些特殊的、复杂的编^码。</p><h5 id="始终在线"><a href="#始终在线" class="headerlink" title="始终在线"></a>始终在线</h5><p>Mosh超越了SSH的可变性。Mosh克服了我们都与移动连接相关的不稳定和间歇性连接。您可以检查Safari，而不必担心重新启动SSH连接。感谢Mosh，你可以完美地从家里跳到火车上，然后跳到办公室。Blink是坚如磐石的连接方式。Mosh很容易获得，并且可以很容易地安装在服务器上。访问<a href="https://mosh.org。" target="_blank" rel="noopener">https://mosh.org。</a></p><h5 id="完全可配置"><a href="#完全可配置" class="headerlink" title="完全可配置"></a>完全可配置</h5><p>Blink热情拥抱蓝牙连接键盘。一些人喜欢在Vim上设置Esc，另一些人喜欢在Emacs上设置Ctrl。瞬目是它们的冠军。但还有更多，因为我们想要更多。您还可以添加自己的自定义主题和字体来闪烁。在你的日常工作中，你处于自己的状态。<br>但是，眨眼更重要。请阅读:<br>你应该命令你的终端，而不是导航它。Blink会把你直接跳到一个友好的shell中，这样你就可以清楚地看到如何滚动了。<br>界面很简单。我们抛弃了所有的菜单，为您的终端打开了全屏。<br>使用滑动在打开的连接之间移动，滑下来关闭它们，甚至捏来缩放!<br>通过添加您自己的主机和RSA加密密钥来配置Blink连接。一切看起来都很熟悉，你很快就可以开始工作了!</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>我们已经合并了SplitView，用于那些必要的谷歌搜索和与同事聊天。<br>更多信息，请访问<a href>Blink Shell</a>。</p><h4 id="添加新功能"><a href="#添加新功能" class="headerlink" title="添加新功能"></a>添加新功能</h4><p>这个分支还包含一组shell实用程序，因此您可以添加/删除文件、列出它们等等。<br>目前可用的命令有:</p><ol><li>操作命令<br>cd, setenv, ls, touch, cp, rm, ln, mv, mkdir, rmdir, df, du, chksum, chmod, chflags, chgrp, stat, readlink, compress, uncompress, gzip, gunzip，</li><li>环境命令<br>pwd, env, printenv, date, uname, id, groups, whoami, uptime<br>cat,grep, wc</li><li>访问命令<br>curl(包括http、https、scp、sftp…)、scp、sftp</li><li>tar</li><li>第三方项目：使用外部项目:Python、Lua和TeX<br>您可以单独调用命令，或者使用python或lua使用script脚本。有重定向(“&gt;”、“&lt;”、“&amp; &gt;“…),但没有<code>pipe</code>工具。</li></ol><p>所有这些命令都在<code>ios_system.framework</code>(预编译，用于工具)中。如果您想编辑源代码(以添加更多命令)，请参见:<a href="https://github.com/holzschu/ios_system。" target="_blank" rel="noopener">https://github.com/holzschu/ios_system。</a></p><h4 id="编辑脚本文件"><a href="#编辑脚本文件" class="headerlink" title="编辑脚本文件"></a>编辑脚本文件</h4><p>我建议安装iVim (<a href="https://github.com/terrychou/iVim或https://itunes.apple.com/us/app/ivim/id1266544660?)mt=8)，使用ios11“edit-in-place”在Blink沙箱内编辑文件。" target="_blank" rel="noopener">https://github.com/terrychou/iVim或https://itunes.apple.com/us/app/ivim/id1266544660?)mt=8)，使用ios11“edit-in-place”在Blink沙箱内编辑文件。</a></p><h4 id="密钥访问方式"><a href="#密钥访问方式" class="headerlink" title="密钥访问方式"></a>密钥访问方式</h4><p>curl可以打开与iPad之间的文件传输(ftp、http、scp、sftp…)。</p><ol><li>它使用了BLINKSHELL的密钥管理(即“config”创建密钥)。</li><li><p>也可以指定键与路径:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl scp:<span class="comment">//host.name.edu/filename -o filename—key $SHARED/id_rsa—pass MyPassword</span></span><br></pre></td></tr></table></figure>    <p>你也可以使用scp和sftp命令:</p><pre><code>scp user@host.name.edu:文件名sftp localFilename user@host.name.edu: ~ /</code></pre></li></ol><p>scp和sftp是通过curl实现的，通过重写参数来遵循curl语法。<br>利:更轻的实现，更小的内存成本，更不可能有函数名冲突。<br>弊:有些开关可能没有完全相同的含义。</p><h4 id="第三方语言包"><a href="#第三方语言包" class="headerlink" title="第三方语言包"></a>第三方语言包</h4><p>语言包(Python、Lua和TeX)只提供等价的二进制文件。您可以使用包(/usr/local/texlive或/usr/lib/python2.7)传输目录，并将它们放到Blink应用程序的Library文件夹中。这是命令，如ls, rm, tar, mv…将是有用的。<br>注意:所有框架(除了curl)都是动态框架，以减少应用程序内存占用。</p><h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><p>在iOS中，由于沙箱限制，不能在<strong>~</strong>目录下写，只能在<code>~/Documents/</code>、<code>~/Library/</code>和<code>~/tmp</code>中写。大多数Unix程序假定配置文件位于<code>$HOME</code>中。因此，要么将<code>$HOME</code>重新定义为<code>~/Documents/</code>，要么将配置变量(使用setenv)设置为其他位置。<br>我用Blink在<code>MCPSession.m</code>文件。定义了以下变量:<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">setenv PATH = <span class="variable">$PATH</span>:~/Library/bin:~/Documents/bin</span><br><span class="line">setenv PYTHONHOME = <span class="variable">$HOME</span>/Library/</span><br><span class="line">setenv SSH_HOME = <span class="variable">$HOME</span>/Documents/</span><br><span class="line">setenv CURL_HOME = <span class="variable">$HOME</span>/Documents/</span><br><span class="line">setenv HGRCPATH = <span class="variable">$HOME</span>/Documents/.hgrc/</span><br><span class="line">setenv SSL_CERT_FILE = <span class="variable">$HOME</span>/Documents/cacert.pem</span><br></pre></td></tr></table></figure></p><p>如果你想永久地改变它们，最好是编辑<code>MCPSession.m</code>文件。</p><h3 id="使用Blink"><a href="#使用Blink" class="headerlink" title="使用Blink"></a>使用Blink</h3><p>我们的UI非常直观，并优化了触摸设备的体验，这是非常重要的部分，terminal终端。您将直接跳到一个非常简单的shell中，因此您将知道如何操作。<br>这里还有一些技巧:<br>键入<code>help</code>在shell中查找信息。<br>新建shell命令：用两个手指轻敲创建一个新的shell。<br>移动shell命令：通过用手指移动两行shell命令。<br>新建连接/重连/退出：您可以退出会话并回到shell打开一个新连接。<br>关闭session：两个手指向下拖动来关闭会话。<br>缩放文本：使用缩放手势来增加或减少文本的大小。您也可以使用Cmd+或Cmd-如果使用键盘。<br>复制和粘贴：通过选择文本点击屏幕。<br>运行“config”来设置密钥。通过ssh-copy-id将它们安装到服务器。<br>在SmartKeys栏上的Ctrl和Alt修改器允许连续按下，就像在真正的键盘上一样。</p><h3 id="支持python命令"><a href="#支持python命令" class="headerlink" title="支持python命令"></a>支持python命令</h3><p><a href="https://github.com/holzschu/blink.git" target="_blank" rel="noopener">holzschu/blink</a><br><a href="https://github.com/holzschu/pyhon_iOS.git" target="_blank" rel="noopener">holzschu/pyhon_iOS</a></p><h3 id="配套使用的iVim工具"><a href="#配套使用的iVim工具" class="headerlink" title="配套使用的iVim工具"></a>配套使用的iVim工具</h3><p><a href="https://github.com/holzschu/iVim.git" target="_blank" rel="noopener">iVim</a><br>readme介绍了，如何在真机上运行以及集成python环境。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="shell" scheme="https://huos3203.github.io/categories/shell/"/>
    
    
  </entry>
  
  <entry>
    <title>Guaka快速创建swift命令行CLI的工具</title>
    <link href="https://huos3203.github.io/2018/11/19/macOS/Guaka%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BAswift%E5%91%BD%E4%BB%A4%E8%A1%8CCLI%E7%9A%84%E5%B7%A5%E5%85%B7/"/>
    <id>https://huos3203.github.io/2018/11/19/macOS/Guaka快速创建swift命令行CLI的工具/</id>
    <published>2018-11-18T19:10:49.000Z</published>
    <updated>2018-11-18T19:10:49.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!--github库卡片--><div id="badge-container-nsomar-Guaka-7d6135f" class="hexo-github" style="width: ="></div><script src="/hexo-github/badge.js"></script><script type="text/javascript">  loadStyle("/hexo-github/style.css");  loadStyle("/hexo-github/octicons/octicons.css");  new Badge("#badge-container-nsomar-Guaka-7d6135f", "nsomar", "Guaka", "7d6135f", false);</script><h3 id="Guaka介绍"><a href="#Guaka介绍" class="headerlink" title="Guaka介绍"></a>Guaka介绍</h3><p>通过 Guaka Framework 来实现 CLI(command-line interface)。<br>该框架可以快速实现如下的效果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -v &quot;url&quot;</span><br></pre></td></tr></table></figure></p><p><code>git</code> 就是一个 <strong>CLI</strong>，<code>checkout</code>是这个<strong>CLI</strong>的子命令，并接受一个<code>String</code> 作为他的参数。</p><p>对应上述的命令可以为分为：</p><ul><li><code>git</code> 主命令</li><li><code>checkout</code> 子命令</li><li><code>-v/–v</code> 命令所接收的 flag<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">└── git</span><br><span class="line">    ├── checkout -v</span><br><span class="line">    └── push -f</span><br><span class="line">    └── ...</span><br></pre></td></tr></table></figure></li></ul><p>在 Guaka 中代码表现基本就是这样子的：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> flag = <span class="type">Flag</span>(longName: <span class="string">"v"</span>, value: <span class="literal">false</span>, description: <span class="string">"Show verbose"</span>)</span><br><span class="line"><span class="keyword">let</span> command = <span class="type">Command</span>(usage: <span class="string">"git"</span>, flags: [flag]) &#123; flags, args <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">let</span> showVerbose = flags.getBool(name: <span class="string">"v"</span>)</span><br><span class="line">    <span class="comment">// args the positional arguments passed to the command</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>上面就是 git 的 -v 指令，是否打印过程.</p><h3 id="Guaka快速上手"><a href="#Guaka快速上手" class="headerlink" title="Guaka快速上手"></a>Guaka快速上手</h3><ol><li><p>安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; brew install oarrabi/tap/guaka</span><br></pre></td></tr></table></figure></li><li><p>新建工程<br>假设我们要建立一个 <strong>papa</strong> 的CLI指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd 到需要建立工程的目录</span><br><span class="line">guaka create papa</span><br></pre></td></tr></table></figure></li></ol><p>会生成如下路径<br>├── Package.swift<br>└── Sources<br>    ├── main.swift<br>    ├── root.swift<br>    └── setup.swift </p><ol start="3"><li>增加指令<br>给 <strong>papa</strong> 增加个子命令叫做 check<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">guaka add check</span><br></pre></td></tr></table></figure></li></ol><p>增加 flag<br>增加 flag 就要去 Source 下面对应的 Swift 文件中修改。</p><ol start="4"><li>编译执行 Swift build<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swift build</span><br></pre></td></tr></table></figure></li></ol><p>// 会编译生成可执行文件<br>// .build/debug/papa –help</p><ol start="5"><li>运行<strong>papa</strong>可执行文件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.build/debug/papa check</span><br></pre></td></tr></table></figure></li></ol><p>增加逻辑就在对应的 Swift 文件中增加.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="macOS" scheme="https://huos3203.github.io/categories/macOS/"/>
    
    
  </entry>
  
  <entry>
    <title>使用swift命令行抓取WWDC字幕</title>
    <link href="https://huos3203.github.io/2018/11/19/macOS/%E4%BD%BF%E7%94%A8swift%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%8A%93%E5%8F%96WWDC%E5%AD%97%E5%B9%95/"/>
    <id>https://huos3203.github.io/2018/11/19/macOS/使用swift命令行抓取WWDC字幕/</id>
    <published>2018-11-18T19:10:49.000Z</published>
    <updated>2018-11-18T19:10:49.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!--github库卡片--><div id="badge-container-huos3203-WWDC-Subtitles-84878dc" class="hexo-github" style="width: ="></div><script src="/hexo-github/badge.js"></script><script type="text/javascript">  loadStyle("/hexo-github/style.css");  loadStyle("/hexo-github/octicons/octicons.css");  new Badge("#badge-container-huos3203-WWDC-Subtitles-84878dc", "huos3203", "WWDC-Subtitles", "84878dc", false);</script><p>平时没有那么大段的时间能去看这些 session 的视频，想先通过字幕能了解到 session 中的内容，所以搜罗了网上大牛抓取WWDC字幕的相关实现。</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p><a href="https://github.com/insidegui/WWDC" target="_blank" rel="noopener">WWDC客户端</a>作者分享的一个开源项目<a href="https://github.com/rlwimi/jonyfive" target="_blank" rel="noopener">jonyfive</a>是把他WWDC项目中抓取字幕文件逻辑抽取出来，就是使用 swift 做的爬虫，可以结合项目做些有趣的东西。<br>这边我对该项目进行了一些修改，之前下载的直接就是 vtt 的文件，并没有对文本文件进行处理，我把vtt格式调整了正常阅读的模式，方便大家阅读。</p><blockquote><p>不支持2108下载</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/Danny1451/WWDC-Subtitles.git</span><br><span class="line">$ cd WWDC-Subtitles</span><br><span class="line">$ swift build</span><br></pre></td></tr></table></figure><h2 id="抓取字幕"><a href="#抓取字幕" class="headerlink" title="抓取字幕"></a>抓取字幕</h2><p>获取 2017 年 204 session 的字幕，保存到当前目录的 2017 文件夹<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./wwwww subtitle -s 204 -v -y 2017</span><br></pre></td></tr></table></figure></p><p>获取 2016 年 204 session 的 meta 信息，以 json 格式并且保存在当前目录的 sessions.json 文件中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./wwwww meta -s 204 -v -y 2016</span><br></pre></td></tr></table></figure></p><h2 id="如何下载中文"><a href="#如何下载中文" class="headerlink" title="如何下载中文"></a>如何下载中文</h2><h2 id="如何支持2018下载"><a href="#如何支持2018下载" class="headerlink" title="如何支持2018下载"></a>如何支持2018下载</h2><p><a href="http://danny-lau.com/2017/07/19/wwdc-2017-guaka/" target="_blank" rel="noopener">WWDC 2017 字幕抓取 &amp; Guaka 介绍</a></p><p><a href="https://www.jianshu.com/p/62a822835462" target="_blank" rel="noopener">WWDCHelper - 帮你更好下载 WWDC 中文字幕</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="macOS" scheme="https://huos3203.github.io/categories/macOS/"/>
    
    
  </entry>
  
  <entry>
    <title>Swift的动态性</title>
    <link href="https://huos3203.github.io/2018/11/10/swift/Swift%E7%9A%84%E5%8A%A8%E6%80%81%E6%80%A7/"/>
    <id>https://huos3203.github.io/2018/11/10/swift/Swift的动态性/</id>
    <published>2018-11-10T09:14:55.000Z</published>
    <updated>2018-11-10T09:14:55.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="Foundation"><a href="#Foundation" class="headerlink" title="Foundation"></a>Foundation</h2><p>Foundation 框架实现了基于运行时一个特性的两个API：</p><ol><li><code>键值编码 (key-value-coding, KVC)</code></li><li><code>键值观察 (key-value observing, KVO)</code><br>KVC 和 KVO 允许我们将 UI 和数据进行绑定，这也是 Rx 以及其他响应式框架实现的基础。<h3 id="KVC"><a href="#KVC" class="headerlink" title="KVC"></a>KVC</h3>KVC 的工作方式如下所示：<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSNumber</span> *number;</span><br><span class="line"></span><br><span class="line">[myClass valueForKey:<span class="string">@"number"</span>];</span><br><span class="line">[myClass setValue:@(<span class="number">4</span>) forKey:<span class="string">@"number"</span>];</span><br></pre></td></tr></table></figure></li></ol><p>例如，假设我们有这个 number 属性，您可以将属性名称作为键，来获取属性值或者设置属性值。这个功能可以用在此前我们所看到的获取变量列表、协议列表，以及危险的混淆功能当中。</p><h3 id="KVO"><a href="#KVO" class="headerlink" title="KVO"></a>KVO</h3><p>通常所说的 Objective-C 「动态性」，往往都是指 KVO。虽然还有其余的函数，但是这些是最常见、最常用的。这也就是人们所说的，Swift 缺失的部分。</p><ol><li>使用KVO对状态的变化进行注册<figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[myClass addObserver:<span class="keyword">self</span></span><br><span class="line">forKeyPath:<span class="string">@"number"</span></span><br><span class="line">options:<span class="built_in">NSKeyValueObservingOptionInitial</span> | <span class="built_in">NSKeyValueObservingOptionNew</span></span><br><span class="line">context:<span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)observeValueForKeyPath:(<span class="built_in">NSString</span> *)keyPath</span><br><span class="line">ofObject:(<span class="keyword">id</span>)object</span><br><span class="line">change:(<span class="built_in">NSDictionary</span>&lt;<span class="built_in">NSKeyValueChangeKey</span>,<span class="keyword">id</span>&gt; *)change</span><br><span class="line">context:(<span class="keyword">void</span> *)context&#123;</span><br><span class="line"><span class="comment">// Respond to observation.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>在观察的值发生变更之后，KVO 会调用此方法立即通知观察者。通过这个方法，我们便可以按需更新 UI。</p><ol start="2"><li>弊端：难以调试<br>KVO这些操作都存有隐患。比方说 KVO，特别是当我们对某个不是自己所创建的类进行观察时，往往会发现有出乎意料的变化发生。通常而言，这些问题是非常难以调试的，也很难去理解为什么出错。在实际产品当中，我并不建议使用它们，尽管它们非常好用。但是在实际产品当中，我会很谨慎地去使用这些功能。</li></ol><p>Apple 也是如此认为的，因此它们在视图控制器当中添加了这个私有方法，可以使用 class-dump 来查看。</p><ul><li>(void)                   attentionClassDumpUser:<br>yesItsUsAgain:<br>althoughSwizzlingAndOverridingPrivateMethodsIsFun:<br>itWasntMuchFunWhenYourAppStoppedWorking:<br>pleaseRefrainFromDoingSoInTheFutureOkayThanksBye:</li></ul><p>的确，很让人抓狂。</p><h2 id="Swift"><a href="#Swift" class="headerlink" title="Swift"></a>Swift</h2><p>Swift 是一种强类型语言。即默认类型是安全的静态类型。如果需要的话，不安全类型也是存在的，但是 Swift 仍然是尽力推动我们使用安全的静态类型。Swift 中的动态性可以通过 Objective-C 运行时来获得。</p><p>本来这是很好的，但是 Swift 开源并迁移到 Linux 之后，由于 Linux 上的 Swift 并不提供 Objective-C 运行时，事情就大条了。社区的关键点在于，让 Swift 未来能够自己配备动态性，而不是依赖于 Apple。</p><h3 id="Swift中的两个动态修饰符"><a href="#Swift中的两个动态修饰符" class="headerlink" title="Swift中的两个动态修饰符"></a>Swift中的两个动态修饰符</h3><ol><li><code>@objc</code>: 将Swift API 暴露给 Objective-C 运行时，但是它仍然不能保证编译器会尝试对其进行优化。</li><li><code>@dynamic</code>:动态功能修饰符，它隐含添加了 <code>@objc</code>功能。</li></ol><h3 id="Swift中运行时方法"><a href="#Swift中运行时方法" class="headerlink" title="Swift中运行时方法"></a>Swift中运行时方法</h3><p>回到我们的动态特性当中，让我们来看一看 Swift 当中这些动态特性是什么样的。假设我们需要使用内省机制、转发方法、替换和绑定方法。</p><h4 id="方法转发"><a href="#方法转发" class="headerlink" title="方法转发"></a>方法转发</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1</span></span><br><span class="line">override <span class="keyword">class</span> func resolveInstanceMethod(_ sel: Selector!)</span><br><span class="line">-&gt; Bool &#123;</span><br><span class="line"><span class="comment">// 添加实例方法并返回 true 的一次机会，它随后会再次尝试发送消息</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line">override func forwardingTarget(<span class="keyword">for</span> aSelector: Selector!) -&gt;</span><br><span class="line">Any? &#123;</span><br><span class="line"><span class="comment">// 返回可以处理 Selector 的对象</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3 - Swift 不支持 NSInvocation</span></span><br></pre></td></tr></table></figure><p>resolveInstanceMethod 同样会被调用，forwardingTarget 看起来似乎更贴近于 Swift 3 风格的 API。但是 NSInvocation 并不能在 Swift 当中使用。我们同样可以实现方法转发，因此看起来也不算太坏。</p><h4 id="方法混淆"><a href="#方法混淆" class="headerlink" title="方法混淆"></a>方法混淆</h4><p><code>load</code> 在 Swift 不再会被调用，因此我们需要在 <code>initialize</code> 中进行混淆。在 Objective-C 当中使用的 <code>dispatch_once</code>，但是在 Swift 3 中被废弃。事情变得略为复杂。虽然对于特定类型的函数而言，我们仍然可以将其定义为动态函数，但是它会消除大部分混淆的功能。</p><h4 id="内省机制"><a href="#内省机制" class="headerlink" title="内省机制"></a>内省机制</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">if self is MyClass &#123;</span><br><span class="line">// YAY</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">let myString = &quot;myString&quot;;</span><br><span class="line">let mirror = Mirror(reflecting: myString)</span><br><span class="line">print(mirror.subjectType) // “String&quot;</span><br><span class="line">let string = String(reflecting: type(of:</span><br><span class="line">myString)) // Swift.String</span><br><span class="line"></span><br><span class="line">// No native method introspection</span><br></pre></td></tr></table></figure><p><code>is</code> 替代了 <code>isMemberOfClass</code>，它同样也可以对 Swift 值类型:结构体、枚举以及其他 Swift 当中的新类型使用。此外还有一个新的映射 API，它主要针对于管道 (pipe) 和数据。</p><h4 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h4><p>目前，我们没有原生的办法来实现内省。这也预示着这个功能未来可能会出现，但是目前我们还无法实现。这很令人沮丧，特别是当您想到我们此前所实现的 XCTestCase。如果您打算为 Linux 编写单元测试的时候，就无法自动遍历所有的函数。您必须实现 static var allTests，然后手动列出所有的测试函数。这很糟糕。</p><h4 id="KVC-KVO功能的削弱"><a href="#KVC-KVO功能的削弱" class="headerlink" title="KVC/KVO功能的削弱"></a>KVC/KVO功能的削弱</h4><p>KVO 的魅力在于，您可以在不是自己所创建的类当中使用它，也可以只对您想要监听变化的类使用。KVO 和 KVC 在 Swift 被极大地削弱了。<br>两点要求：</p><ol><li>被观察的对象必须要继承自 NSObject，并且使用一个 Objective-C 类型。</li><li>被观察的变量必须要声明为 @dynamic。您必须要对想要观察的事务了如指掌。<br>问题是 Swift 并没有很好的替代方案。您可以使用 Rx 或者基于协议来观察对象。但是语言自身是没有原生的解决方案的。</li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>总而言之，Objective-C 的动态性无疑是非常强大的、极其有用，虽然也存在危险性。Swift 目前没有足够的替代方案来解决这些问题，但是可以预见在不久的将来 Swift 的动态性将会出现，这是值得我们期待的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="swift" scheme="https://huos3203.github.io/categories/swift/"/>
    
    
  </entry>
  
  <entry>
    <title>Chisel-xcodeproj框架的使用</title>
    <link href="https://huos3203.github.io/2018/11/09/%E8%B0%83%E8%AF%95/Chisel-xcodeproj%E6%A1%86%E6%9E%B6%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://huos3203.github.io/2018/11/09/调试/Chisel-xcodeproj框架的使用/</id>
    <published>2018-11-09T13:05:46.000Z</published>
    <updated>2018-11-09T20:13:28.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!--github库卡片--><div id="badge-container-huos3203-chisel-f331dc6" class="hexo-github" style="width: ="></div><script src="/hexo-github/badge.js"></script><script type="text/javascript">  loadStyle("/hexo-github/style.css");  loadStyle("/hexo-github/octicons/octicons.css");  new Badge("#badge-container-huos3203-chisel-f331dc6", "huos3203", "chisel", "f331dc6", false);</script><p>这个pull请求添加<code>findinstances命令</code>，该命令完成<a href="https://github.com/facebook/chisel/pull/197" target="_blank" rel="noopener">Add findinstances, and new support framework in Chisel.xcodeproj </a>和<a href="https://github.com/facebook/chisel/pull/214" target="_blank" rel="noopener">Add Makefile for installing framework</a>的工作。<br>用户可以运行<code>help findinstances</code>获取<code>findinstances</code>的详细信息。简要总结一下，<code>findinstances</code>可以找到给定<code>class</code>类或<code>protocol</code>协议的所有实例，并使用谓词表达式过滤这些结果。<br>如果您有一个名为<code>XXSocialUser</code>的类，那么您可以通过运行<code>findinstances XXSocialUser == &#39;curry&#39;</code>来找到一个特定的用户。</p><p><code>Chisel.xcodeproj</code>为新建<code>findinstance</code>提供了凿子框架支持。<br>使用<code>Chisel.xcodeproj</code>支持新建<code>chisel Framework</code>通过本地代码实现<code>command</code>,<code>findinstances</code>等功能。也可以通过这种方式来实现更多<code>chisel命令</code>。</p><p><code>findinstance</code>命令通过扫描<strong>iOS/macOS</strong><code>malloc API</code>。对于每个<code>allocation</code>分配，都会使用<code>heuristics</code>来识别可能的<code>Objective-C实例</code>。<code>heuristics</code>不调用对象上的method，而是依赖<code>objc runtime</code>运行时函数,基于<code>class metadata</code>类元数据来匹配到<code>oc实例</code>。这避免了在<code>objc运行时</code>机制下分配和有状态副作用。<br>在第一次传递之后，候选对象将通过第二次传递，检查它们是否与可选的<code>NSPredicate</code>匹配。如果没有谓词，则输出对象的信息最少。如果有谓词，并且对象传递谓词，那么对象将输出更多细节，特别是谓词中查询的细节。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">findinstances UIView</span><br><span class="line">findinstances *UIView</span><br><span class="line">findinstances UIScrollViewDelegate</span><br><span class="line">findinstances UIView window == nil || hidden == true || alpha == 0 || layer.bounds.#size.width == 0 ||  layer.bounds.#size.height == 0 </span><br><span class="line">findinstances UIView subviews.@count == 0</span><br><span class="line">findinstances NSDictionary any @allKeys beginswith &apos;perf_&apos;</span><br><span class="line">findinstances NSArray @count &gt; 100</span><br></pre></td></tr></table></figure></p><h3 id="开发使用"><a href="#开发使用" class="headerlink" title="开发使用"></a>开发使用</h3><p>构建Xcode项目，并获得到<code>Chisel Framework</code>的路径。:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Users/&lt;me&gt;/Library/Developer/Xcode/DerivedData/Chisel-&lt;stuff&gt;/Build/Products/Debug-iphonesimulator/Chisel.framework/Chisel</span><br></pre></td></tr></table></figure></p><p>在lldb环境下执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ lldb</span><br><span class="line">&gt;&gt;&gt; expr -l objc -- (void*)dlopen(&quot;/path/to/Chisel.framework/Chisel&quot;, 2)</span><br><span class="line">script o=lldb.SBExpressionOptions(); o.SetLanguage(lldb.eLanguageTypeObjC); o.SetTrapExceptions(False); o.SetTryAllThreads(False); o.SetTimeoutInMicroSeconds(10*1000000); lldb.frame.EvaluateExpression(&apos;(void)PrintInstances(&quot;&lt;classname&gt;&quot;, &quot;&lt;predicate&gt;&quot;)&apos;, o)</span><br></pre></td></tr></table></figure></p><p><code>&lt;classname&gt;</code>:可以是<code>class</code>类名或<code>protocol</code>协议名<br><code>&lt;predicate&gt;</code>:是一个可由<code>NSPredicate</code>解析的字符串<br>可以使用<code>regex command 命令</code>:<br>(注意，<code>findinstance</code>后面必须换行)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">command regex findinstances</span><br><span class="line">s/(\S+) *(.*)/script o=lldb.SBExpressionOptions(); o.SetLanguage(lldb.eLanguageTypeObjC); o.SetTrapExceptions(False); o.SetTryAllThreads(False); o.SetTimeoutInMicroSeconds(10*1000000); lldb.frame.EvaluateExpression(&apos;(void)PrintInstances(&quot;%1&quot;, &quot;%2&quot;)&apos;, o)/</span><br></pre></td></tr></table></figure></p><p>或者，作为<code>python命令</code>，存储在<code>path/to/findinstances.py</code>中:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import lldb</span><br><span class="line"></span><br><span class="line">def findinstances(debugger, command, exe_ctx, result, _):</span><br><span class="line">options = lldb.SBExpressionOptions()</span><br><span class="line">options.SetTrapExceptions(False)</span><br><span class="line">options.SetTryAllThreads(False)</span><br><span class="line">options.SetTimeoutInMicroSeconds(10*1000000)</span><br><span class="line">options.SetLanguage(lldb.eLanguageTypeObjC)</span><br><span class="line"></span><br><span class="line">frame = exe_ctx.frame</span><br><span class="line"></span><br><span class="line">if not exe_ctx.target.module[&apos;Chisel&apos;]:</span><br><span class="line">frame.EvaluateExpression(&apos;(void*)dlopen(&quot;/path/to/Chisel.framework/Chisel&quot;, 2)&apos;, options)</span><br><span class="line"></span><br><span class="line">args = command.split(&apos; &apos;, 1)</span><br><span class="line">typeName = args[0]</span><br><span class="line">predicate = args[1] if len(args) &gt; 1 else &apos;&apos;</span><br><span class="line">frame.EvaluateExpression(&apos;(void)PrintInstances(&quot;&#123;&#125;&quot;, &quot;&#123;&#125;&quot;)&apos;.format(typeName, predicate), options)</span><br><span class="line"></span><br><span class="line">def __lldb_init_module(debugger, _):</span><br><span class="line">debugger.HandleCommand(&apos;command script add -f findinstances.findinstances findinstances&apos;)</span><br></pre></td></tr></table></figure></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><a href="https://github.com/facebook/chisel/pull/214" target="_blank" rel="noopener">Add Makefile for installing framework</a><br>This allows you to run make install with optional environment variables<br>in order to build and install Chisel.framework.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">PREFIX ?= /usr/local/lib</span><br><span class="line"></span><br><span class="line">export INSTALL_NAME =</span><br><span class="line">ifneq ($(LD_DYLIB_INSTALL_NAME),)</span><br><span class="line">    INSTALL_NAME = &quot;LD_DYLIB_INSTALL_NAME=$(LD_DYLIB_INSTALL_NAME)&quot;</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">install:</span><br><span class="line">    xcodebuild \</span><br><span class="line">        -scheme Chisel \</span><br><span class="line">        -configuration Release \</span><br><span class="line">        -sdk iphonesimulator \</span><br><span class="line">        install \</span><br><span class="line">        $(INSTALL_NAME) \</span><br><span class="line">        DSTROOT=/ \</span><br><span class="line">        INSTALL_PATH=&quot;$(PREFIX)&quot;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="调试" scheme="https://huos3203.github.io/categories/%E8%B0%83%E8%AF%95/"/>
    
    
  </entry>
  
</feed>
