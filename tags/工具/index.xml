<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>工具 on Even - A super concise theme for Hugo</title>
    <link>https://it-boyer.github.io/tags/%E5%B7%A5%E5%85%B7/</link>
    <description>Recent content in 工具 on Even - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 13 Jun 2017 17:33:59 +0000</lastBuildDate>
    
	<atom:link href="https://it-boyer.github.io/tags/%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Xcode8中SB适配横竖屏按钮VaryforTraits</title>
      <link>https://it-boyer.github.io/post/xcode/xcode8%E4%B8%ADsb%E9%80%82%E9%85%8D%E6%A8%AA%E7%AB%96%E5%B1%8F%E6%8C%89%E9%92%AEvaryfortraits/</link>
      <pubDate>Tue, 13 Jun 2017 17:33:59 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/xcode/xcode8%E4%B8%ADsb%E9%80%82%E9%85%8D%E6%A8%AA%E7%AB%96%E5%B1%8F%E6%8C%89%E9%92%AEvaryfortraits/</guid>
      <description>升级xcode8之后，打开storyboard发现xcode7适配界面的size class被Trait Variations所取代: Trait Vari</description>
    </item>
    
    <item>
      <title>搞定1无压工作的艺术</title>
      <link>https://it-boyer.github.io/post/%E9%98%85%E8%AF%BB/%E6%90%9E%E5%AE%9A1%E6%97%A0%E5%8E%8B%E5%B7%A5%E4%BD%9C%E7%9A%84%E8%89%BA%E6%9C%AF/</link>
      <pubDate>Tue, 13 Jun 2017 10:34:26 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E9%98%85%E8%AF%BB/%E6%90%9E%E5%AE%9A1%E6%97%A0%E5%8E%8B%E5%B7%A5%E4%BD%9C%E7%9A%84%E8%89%BA%E6%9C%AF/</guid>
      <description>前言 第一部分 通向从容之道 第1章 新情况，新做法 如何回归“心如止水”的境界 在知识工作的环境下（信息大爆炸，事物繁杂的特点），传统时间管理法逐渐无</description>
    </item>
    
    <item>
      <title>WacomSlate笔记本使用</title>
      <link>https://it-boyer.github.io/post/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/wacomslate%E7%AC%94%E8%AE%B0%E6%9C%AC%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sat, 03 Jun 2017 23:32:45 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/wacomslate%E7%AC%94%E8%AE%B0%E6%9C%AC%E4%BD%BF%E7%94%A8/</guid>
      <description>使用场景 梳理任务列表，整理阅读笔记和思维导图，来配合iPad完成每日工作任务 使用效率 按时出图，分解任务，规划职业 带来的回报 Starter.playgroundbook iPad学习开发</description>
    </item>
    
    <item>
      <title>麦步第一天体验</title>
      <link>https://it-boyer.github.io/post/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/%E9%BA%A6%E6%AD%A5%E7%AC%AC%E4%B8%80%E5%A4%A9%E4%BD%93%E9%AA%8C/</link>
      <pubDate>Fri, 02 Jun 2017 14:39:46 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/%E9%BA%A6%E6%AD%A5%E7%AC%AC%E4%B8%80%E5%A4%A9%E4%BD%93%E9%AA%8C/</guid>
      <description>开源 开发文档 gitHub源码库 效率 可用功能 滴答清单，同步神速，可以使用麦步来标记完成任务 表盘：纯黑背景比较适合，内置白底表盘无法卸载 工具：计</description>
    </item>
    
    <item>
      <title>swift开发macOS系统的终端命令行应用</title>
      <link>https://it-boyer.github.io/post/macos/swift%E5%BC%80%E5%8F%91macos%E7%B3%BB%E7%BB%9F%E7%9A%84%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BA%94%E7%94%A8/</link>
      <pubDate>Mon, 29 May 2017 13:00:08 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/swift%E5%BC%80%E5%8F%91macos%E7%B3%BB%E7%BB%9F%E7%9A%84%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BA%94%E7%94%A8/</guid>
      <description>教程 命令行程序MacOS的教程 使用swift创建一个命令行程序，相比其他语言如C、Perl、Ruby或java。 选用SWIFT的理由： Swi</description>
    </item>
    
    <item>
      <title>痛定思痛的项目管理弊病</title>
      <link>https://it-boyer.github.io/post/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E7%97%9B%E5%AE%9A%E6%80%9D%E7%97%9B%E7%9A%84%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%BC%8A%E7%97%85/</link>
      <pubDate>Sat, 27 May 2017 15:06:17 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E7%97%9B%E5%AE%9A%E6%80%9D%E7%97%9B%E7%9A%84%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%BC%8A%E7%97%85/</guid>
      <description>问题 现状：两个项目源码存在八成为同样的代码，管理在两个SVN库中。 背景：从一个SVN项目分裂成两个独立项目（PBB_2/Reader_v2）</description>
    </item>
    
    <item>
      <title>升职必备的技能修炼二 以道御术</title>
      <link>https://it-boyer.github.io/post/%E9%98%85%E8%AF%BB/%E4%BF%AE%E7%82%BC%E5%8D%87%E8%81%8C%E5%BF%85%E5%A4%87%E7%9A%84%E6%8A%80%E8%83%BD%E4%BA%8C/</link>
      <pubDate>Thu, 25 May 2017 18:09:00 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E9%98%85%E8%AF%BB/%E4%BF%AE%E7%82%BC%E5%8D%87%E8%81%8C%E5%BF%85%E5%A4%87%E7%9A%84%E6%8A%80%E8%83%BD%E4%BA%8C/</guid>
      <description>“老付”谈论的是目标，所有的方法都是为目标服务的，目标统率人的行为。 * 怎样规划自己的人生？ * 怎样树立自己的目标？ * 怎样把目标转化成实际的行动</description>
    </item>
    
    <item>
      <title>修炼升职必备的技能</title>
      <link>https://it-boyer.github.io/post/%E9%98%85%E8%AF%BB/%E4%BF%AE%E7%82%BC%E5%8D%87%E8%81%8C%E5%BF%85%E5%A4%87%E7%9A%84%E6%8A%80%E8%83%BD/</link>
      <pubDate>Thu, 25 May 2017 16:40:42 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E9%98%85%E8%AF%BB/%E4%BF%AE%E7%82%BC%E5%8D%87%E8%81%8C%E5%BF%85%E5%A4%87%E7%9A%84%E6%8A%80%E8%83%BD/</guid>
      <description>焦虑是由于缺乏控制力，以及组织管理、准备和行动不足所造成的。 四象限 走出第三象限，将工作重心放进第二象限 1. 第二象限法则 2. 猴子法则：屏蔽干扰的伎</description>
    </item>
    
    <item>
      <title>calibre一站式电子书解决方案</title>
      <link>https://it-boyer.github.io/post/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/calibre%E4%B8%80%E7%AB%99%E5%BC%8F%E7%94%B5%E5%AD%90%E4%B9%A6%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Thu, 25 May 2017 14:26:15 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87/calibre%E4%B8%80%E7%AB%99%E5%BC%8F%E7%94%B5%E5%AD%90%E4%B9%A6%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>Calibre，是一个免费的开源的“一站式”的电子书解决方案，它可以全面满足你的电子书需求。Calibre 是免费的，源代码开放，拥有跨平台的</description>
    </item>
    
    <item>
      <title>Xcode8插件制作替代Alcatraz</title>
      <link>https://it-boyer.github.io/post/xcode/xcode8%E6%8F%92%E4%BB%B6%E5%88%B6%E4%BD%9C%E6%9B%BF%E4%BB%A3alcatraz/</link>
      <pubDate>Mon, 15 May 2017 14:09:30 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/xcode/xcode8%E6%8F%92%E4%BB%B6%E5%88%B6%E4%BD%9C%E6%9B%BF%E4%BB%A3alcatraz/</guid>
      <description>背景 Xcode7插件工具Alcatraz 开发者可以在Xcode运行的时候通过注入代码去实现插件的功能。插件可以在一个Alcatraz这个优秀</description>
    </item>
    
    <item>
      <title>互动性的教学工具XCPlayground</title>
      <link>https://it-boyer.github.io/post/swift/%E4%BA%92%E5%8A%A8%E6%80%A7%E7%9A%84%E6%95%99%E5%AD%A6%E5%B7%A5%E5%85%B7xcplayground/</link>
      <pubDate>Wed, 01 Mar 2017 17:27:16 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/swift/%E4%BA%92%E5%8A%A8%E6%80%A7%E7%9A%84%E6%95%99%E5%AD%A6%E5%B7%A5%E5%85%B7xcplayground/</guid>
      <description>Playground 展示语法和实时执行真实数据的特性，为编写方法和库接口提供了很好的机会，通过实时编译我们能了解语法、写出例子以及获得方法如何使用的说明，所有</description>
    </item>
    
    <item>
      <title>UIStackView教程了解StackView</title>
      <link>https://it-boyer.github.io/post/ios/ui/uistackview%E6%95%99%E7%A8%8B%E4%BA%86%E8%A7%A3stackview/</link>
      <pubDate>Fri, 24 Feb 2017 18:12:14 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/ios/ui/uistackview%E6%95%99%E7%A8%8B%E4%BA%86%E8%A7%A3stackview/</guid>
      <description>原地址 UIStackView简单介绍 一个Stack View能够将它所含的View以各种方式沿其轴向进行分布，同时也可以将View沿某个方向等</description>
    </item>
    
    <item>
      <title>更改设备屏幕上显示的应用程序图标下方的名称</title>
      <link>https://it-boyer.github.io/post/ios/ui/%E6%9B%B4%E6%94%B9%E8%AE%BE%E5%A4%87%E5%B1%8F%E5%B9%95%E4%B8%8A%E6%98%BE%E7%A4%BA%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%9B%BE%E6%A0%87%E4%B8%8B%E6%96%B9%E7%9A%84%E5%90%8D%E7%A7%B0/</link>
      <pubDate>Fri, 24 Feb 2017 14:23:59 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/ios/ui/%E6%9B%B4%E6%94%B9%E8%AE%BE%E5%A4%87%E5%B1%8F%E5%B9%95%E4%B8%8A%E6%98%BE%E7%A4%BA%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%9B%BE%E6%A0%87%E4%B8%8B%E6%96%B9%E7%9A%84%E5%90%8D%E7%A7%B0/</guid>
      <description>修改APP启动图标上的名称，需配置Info.plist文件，增加CFBundleDisplayName属性键值对。 进入到如下界面： 在Info</description>
    </item>
    
    <item>
      <title>高期望实现异步单元测试</title>
      <link>https://it-boyer.github.io/post/%E8%B0%83%E8%AF%95/%E9%AB%98%E6%9C%9F%E6%9C%9B%E5%AE%9E%E7%8E%B0%E5%BC%82%E6%AD%A5%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Mon, 20 Feb 2017 23:09:30 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E8%B0%83%E8%AF%95/%E9%AB%98%E6%9C%9F%E6%9C%9B%E5%AE%9E%E7%8E%B0%E5%BC%82%E6%AD%A5%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</guid>
      <description>异步单元测试 在Xcode 6之前的版本里面并没有内置XCTest，只能是在主线程的RunLoop里面使用一个while循环,然后一直等待响应或</description>
    </item>
    
    <item>
      <title>JavaScript自动化组件OC桥接</title>
      <link>https://it-boyer.github.io/post/macos/javascript%E8%87%AA%E5%8A%A8%E5%8C%96%E7%BB%84%E4%BB%B6oc%E6%A1%A5%E6%8E%A5/</link>
      <pubDate>Wed, 15 Feb 2017 17:19:30 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/javascript%E8%87%AA%E5%8A%A8%E5%8C%96%E7%BB%84%E4%BB%B6oc%E6%A1%A5%E6%8E%A5/</guid>
      <description>文档 JavaScript自动化有一个内置的Objective-C Bridge，使您能够访问文件系统，创建Cocoa应用程序。 Objective-C Bridge的</description>
    </item>
    
    <item>
      <title>macOS支持JavaScript自动化组件基础</title>
      <link>https://it-boyer.github.io/post/macos/macos%E6%94%AF%E6%8C%81javascript%E8%87%AA%E5%8A%A8%E5%8C%96%E7%BB%84%E4%BB%B6%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Wed, 15 Feb 2017 17:19:30 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/macos%E6%94%AF%E6%8C%81javascript%E8%87%AA%E5%8A%A8%E5%8C%96%E7%BB%84%E4%BB%B6%E5%9F%BA%E7%A1%80/</guid>
      <description>苹果 OS X Yosemite系统把 JavaScript作为AppleScript的另一选择。Automation 是 OS X 10.10版本中的新特性，</description>
    </item>
    
    <item>
      <title>macOS之PDFKit基础</title>
      <link>https://it-boyer.github.io/post/macos/macos%E4%B9%8Bpdfkit%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Tue, 14 Feb 2017 14:29:18 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/macos%E4%B9%8Bpdfkit%E5%9F%BA%E7%A1%80/</guid>
      <description>一个PDF的基本构建块是Documents本身。Documents通常作为文件存储在磁盘上。 作为文件版本，可以支持元数据标记如作者，创建日期</description>
    </item>
    
    <item>
      <title>Fabric对macOS系统的支持</title>
      <link>https://it-boyer.github.io/post/macos/fabric%E5%AF%B9macos%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%94%AF%E6%8C%81%E8%B0%83%E7%A0%94/</link>
      <pubDate>Tue, 14 Feb 2017 11:14:35 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/macos/fabric%E5%AF%B9macos%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%94%AF%E6%8C%81%E8%B0%83%E7%A0%94/</guid>
      <description>Fabric Fabric 是Twitter的移动应用开发平台，一个模块化、跨平台的移动开发套件，该博文主要研究crashlytics在app中的运用。 注册新的账户</description>
    </item>
    
    <item>
      <title>思维导图之开发实践篇</title>
      <link>https://it-boyer.github.io/post/%E5%AF%BC%E5%9B%BE/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE%E4%B9%8B%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%E7%AF%87/</link>
      <pubDate>Mon, 13 Feb 2017 17:11:26 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%AF%BC%E5%9B%BE/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE%E4%B9%8B%E5%BC%80%E5%8F%91%E5%AE%9E%E8%B7%B5%E7%AF%87/</guid>
      <description>阅读书籍 5种图表解决工作中的12大难题 你的第一本思维导图操作书 5分钟手绘彩色圆珠笔涂鸦集 如果阅读一本书 使用思维导图的场景无处不在，无论是做产</description>
    </item>
    
    <item>
      <title>用Git将代码恢复到一个历史的版本</title>
      <link>https://it-boyer.github.io/post/git/%E7%94%A8git%E5%B0%86%E4%BB%A3%E7%A0%81%E6%81%A2%E5%A4%8D%E5%88%B0%E4%B8%80%E4%B8%AA%E5%8E%86%E5%8F%B2%E7%9A%84%E7%89%88%E6%9C%AC/</link>
      <pubDate>Fri, 10 Feb 2017 18:19:48 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/git/%E7%94%A8git%E5%B0%86%E4%BB%A3%E7%A0%81%E6%81%A2%E5%A4%8D%E5%88%B0%E4%B8%80%E4%B8%AA%E5%8E%86%E5%8F%B2%E7%9A%84%E7%89%88%E6%9C%AC/</guid>
      <description>经历：将代码全提交到默认的head分支中，切换分支后，无法找到分支的严重后果： 目的：在当前分支上，将代码恢复到一个历史的提交版本上。 暴力的方</description>
    </item>
    
    <item>
      <title>Crash文件分析方法</title>
      <link>https://it-boyer.github.io/post/%E8%B0%83%E8%AF%95/crash%E6%96%87%E4%BB%B6%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/</link>
      <pubDate>Tue, 07 Feb 2017 12:38:58 +0000</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E8%B0%83%E8%AF%95/crash%E6%96%87%E4%BB%B6%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/</guid>
      <description>第一步：在任意目录创建调试crash的目录 第二步：将之前Archive的文件copy到crash目录里面,其中包括两个文件.app和.app</description>
    </item>
    
    <item>
      <title>GTD任务清单整理技巧</title>
      <link>https://it-boyer.github.io/post/%E5%AF%BC%E5%9B%BE/gtd%E4%BB%BB%E5%8A%A1%E6%B8%85%E5%8D%95%E6%95%B4%E7%90%86%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Thu, 07 Jan 2016 16:00:53 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E5%AF%BC%E5%9B%BE/gtd%E4%BB%BB%E5%8A%A1%E6%B8%85%E5%8D%95%E6%95%B4%E7%90%86%E6%8A%80%E5%B7%A7/</guid>
      <description>什么是GTD？ GTD 的基本理论是把一个人所要要完成的任务和事件全部从大脑中移出来，记录到纸上。这样，大脑便会不被多余的事情打搅而集中于现在所需完</description>
    </item>
    
    <item>
      <title>使用SmartSVN创建版本库</title>
      <link>https://it-boyer.github.io/post/git/%E4%BD%BF%E7%94%A8smartsvn%E5%88%9B%E5%BB%BA%E7%89%88%E6%9C%AC%E5%BA%93/</link>
      <pubDate>Mon, 05 Oct 2015 19:16:47 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/git/%E4%BD%BF%E7%94%A8smartsvn%E5%88%9B%E5%BB%BA%E7%89%88%E6%9C%AC%E5%BA%93/</guid>
      <description>&lt;p&gt;SmartSVN有以下版本：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;SmartSVN enterprise 9 企业版&lt;/li&gt;
&lt;li&gt;SmartSVN foundation 8 基础版&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;由于企业版只能建立本地的版本库，无法创建&amp;amp;使用svn://localhost方式。&lt;/p&gt;

&lt;h4 id=&#34;用基础版来说明创建版本库&#34;&gt;用基础版来说明创建版本库。&lt;/h4&gt;

&lt;p&gt;参考：&lt;a href=&#34;http://hammadk.com/how-to-create-repository-in-smartsvn-tutorial/&#34;&gt;Create Repository in SmartSVN – Tutorial&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;启动SmartSVN SmartSVN foundation 8 基础版&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;菜单栏Project-&amp;gt; set up Local Repository&amp;hellip;&lt;br /&gt;
需要设置如下两个参数：&lt;br /&gt;

&lt;ol&gt;
&lt;li&gt;svnadmin 在终端执行： whereis svnadmin&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;svnserve 在终端执行： whereis svnserve&lt;br /&gt;
￼&lt;img src=&#34;https://app.yinxiang.com/shard/s33/nl/2147483647/59a78b5d-81de-48f1-afe9-2fb2bde72da2//res/adeb039a-b429-481a-ac25-2044b871e45e/screenshot.png?resizeSmall&amp;amp;width=832&#34; alt=&#34;image&#34; /&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;指定版本库的目录位置：&lt;br /&gt;
&lt;img src=&#34;https://app.yinxiang.com/shard/s33/nl/2147483647/59a78b5d-81de-48f1-afe9-2fb2bde72da2//res/a3f00903-101c-4848-a10a-3479643baea7/screenshot.png?resizeSmall&amp;amp;width=832&#34; alt=&#34;image&#34; /&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;初始化账户密码：&lt;br /&gt;
&lt;img src=&#34;https://app.yinxiang.com/shard/s33/nl/2147483647/59a78b5d-81de-48f1-afe9-2fb2bde72da2//res/140f257e-e452-47ea-8317-34a5ed8d6c7f/screenshot.png?resizeSmall&amp;amp;width=832&#34; alt=&#34;image&#34; /&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;完成。&lt;br /&gt;
&lt;img src=&#34;https://app.yinxiang.com/shard/s33/nl/2147483647/59a78b5d-81de-48f1-afe9-2fb2bde72da2//res/ed975623-72bb-4132-8d04-ac9a7b1d2fc9/screenshot.png?resizeSmall&amp;amp;width=832&#34; alt=&#34;image&#34; /&gt;&lt;br /&gt;
&lt;img src=&#34;https://app.yinxiang.com/shard/s33/nl/2147483647/59a78b5d-81de-48f1-afe9-2fb2bde72da2//res/53306789-9d97-485c-a54d-a143e7b078f1/screenshot.png?resizeSmall&amp;amp;width=832&#34; alt=&#34;image&#34; /&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Mac安装gitLab服务器</title>
      <link>https://it-boyer.github.io/post/git/mac%E5%AE%89%E8%A3%85gitlab%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Sun, 27 Sep 2015 19:25:38 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/git/mac%E5%AE%89%E8%A3%85gitlab%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>必要配置 *创建一个名称为&amp;quot;gitlab&amp;quot;管理员用户，然后再创建一个名称为&amp;quot;gitlab&amp;quot;的群组 *开启</description>
    </item>
    
    <item>
      <title>快速正确的安装Ruby,Rails运行环境</title>
      <link>https://it-boyer.github.io/post/shell/%E5%BF%AB%E9%80%9F%E6%AD%A3%E7%A1%AE%E7%9A%84%E5%AE%89%E8%A3%85rubyrails%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Wed, 21 Jan 2015 23:00:39 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/shell/%E5%BF%AB%E9%80%9F%E6%AD%A3%E7%A1%AE%E7%9A%84%E5%AE%89%E8%A3%85rubyrails%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/</guid>
      <description>&lt;p&gt;安装ruby环境：
方法一：下载源码，编译安装：&lt;a href=&#34;http://fsjoy.blog.51cto.com/318484/115045/&#34;&gt;配置中制定安装目录&lt;/a&gt;&lt;br /&gt;
方法二：使用rvm安装：&lt;a href=&#34;https://ruby-china.org/wiki/rvm-guide&#34;&gt;可以提供一个便捷的多版本 Ruby 环境的管理和切换&lt;/a&gt;&lt;br /&gt;
方法三：使用macport安装 &lt;code&gt;port install ruby&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://ruby-china.org/wiki/install_ruby_guide&#34;&gt;详细教程&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;问题：&lt;br /&gt;
&lt;code&gt;ERROR: While executing gem ... (Errno::EPERM) Operation not permitted - /usr/bin/rake&lt;/code&gt;
&lt;a href=&#34;http://stackoverflow.com/questions/30812777/cannot-install-cocoa-pods-after-uninstalling-results-in-error/30851030#30851030&#34;&gt;stackoverflow方法&lt;/a&gt;测试结果没走通。&lt;br /&gt;
最终通过&lt;a href=&#34;http://tadaland.com/os-x-rootless.html&#34;&gt;OS X 10.11中Rootless的实现与解释以及关闭方法&lt;/a&gt;解决.&lt;/p&gt;

&lt;h4 id=&#34;gem介绍&#34;&gt;Gem介绍&lt;/h4&gt;

&lt;p&gt;Gem是一个ruby库和程序的标准包，它通过RubyGem来定位、安装、升级和卸载，非常的便捷。&lt;/p&gt;

&lt;p&gt;Ruby 1.9.2版本默认安装RubyGem，如果你使用其它版本，请参考如何安装RubyGem。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Git中的储藏工具stash</title>
      <link>https://it-boyer.github.io/post/git/git%E4%B8%AD%E7%9A%84%E5%82%A8%E8%97%8F%E5%B7%A5%E5%85%B7stash/</link>
      <pubDate>Mon, 19 Jan 2015 19:57:04 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/git/git%E4%B8%AD%E7%9A%84%E5%82%A8%E8%97%8F%E5%B7%A5%E5%85%B7stash/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#Stashing&#34;&gt;Stashing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#work&#34;&gt;储藏工作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#apply&#34;&gt;应用储藏&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#applyIndex&#34;&gt;被暂存的文件重新暂存&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#drop&#34;&gt;应用后，移除储藏的内容&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#unapply&#34;&gt;取消储藏(Un-applying a Stash)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#stash-unapply&#34;&gt;新建stash-unapply别名&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#stashBranch&#34;&gt;从储藏中创建分支&lt;/a&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;a-name-stashing-git工具-储藏-stashing-a-git&#34;&gt;&lt;a name=&#34;Stashing&#34;&gt;Git工具 - 储藏（Stashing）&lt;/a&gt;git&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;https://git-scm.com/book/zh/v2/Git-工具-储藏与清理&#34;&gt;原文&lt;/a&gt;
场景：当项目中某一部分正在编码中，突然接到新任务，又必须换至其他分支去完成。&lt;/p&gt;

&lt;p&gt;问题：你不想提交进行了一半的工作，否则以后你无法回到这个工作点。&lt;/p&gt;

&lt;p&gt;解决：&lt;strong&gt;&lt;font color=&#34;red&#34;&gt;git stash &lt;/font&gt;&lt;/strong&gt;命令。&lt;/p&gt;

&lt;p&gt;“Stashing”可以获取工作目录的中间状态，即：将修改过的被追踪的文件和暂存的变更，保存到一个未完结变更的堆栈中，随时可以重新应用。&lt;/p&gt;

&lt;h3 id=&#34;a-name-work-储藏工作-a&#34;&gt;&lt;a name=&#34;work&#34;&gt;储藏工作&lt;/a&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li&gt;进入项目目录，修改某个文件，有可能还暂存其中的一个变更。&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;font color=&#34;red&#34;&gt;git status &lt;/font&gt;&lt;/strong&gt;命令,查看中间状态：
{%codeblock lang:bash %}
$ git status&lt;/p&gt;

&lt;h1 id=&#34;on-branch-master&#34;&gt;On branch master&lt;/h1&gt;

&lt;h1 id=&#34;changes-to-be-committed&#34;&gt;Changes to be committed:&lt;/h1&gt;

&lt;h1 id=&#34;use-git-reset-head-file-to-unstage&#34;&gt;(use &amp;ldquo;git reset HEAD &lt;file&gt;&amp;hellip;&amp;rdquo; to unstage)&lt;/h1&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1 id=&#34;modified-index-html&#34;&gt;modified:   index.html&lt;/h1&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1 id=&#34;changes-not-staged-for-commit&#34;&gt;Changes not staged for commit:&lt;/h1&gt;

&lt;h1 id=&#34;use-git-add-file-to-update-what-will-be-committed&#34;&gt;(use &amp;ldquo;git add &lt;file&gt;&amp;hellip;&amp;rdquo; to update what will be committed)&lt;/h1&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1 id=&#34;modified-lib-simplegit-rb&#34;&gt;modified:   lib/simplegit.rb&lt;/h1&gt;

&lt;p&gt;#
{%endcodeblock%}&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;切换分支，但不提交step 1 中的变更，所以储藏这些变更。
执行&lt;strong&gt;&lt;font color=&#34;red&#34;&gt;git stash &lt;/font&gt;&lt;/strong&gt;命令，往堆栈中推送一个新的储藏：
{%codeblock lang:bash %}
$ git stash
Saved working directory and index state &lt;br /&gt;
&amp;ldquo;WIP on master: 049d078 added the index file&amp;rdquo;
HEAD is now at 049d078 added the index file
(To restore them type &amp;ldquo;git stash apply&amp;rdquo;)
{%endcodeblock%}&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;执行step 2查看目录库，中间状态就不见了：
{%codeblock lang:bash %}
$ git status
#######On branch master
nothing to commit, working directory clean
{%endcodeblock%}
这时，你可以方便地切换到其他分支工作；你的变更都保存在栈上。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使用&lt;strong&gt;&lt;font color=&#34;red&#34;&gt;git stash list&lt;/font&gt;&lt;/strong&gt;要查看现有的储藏：
{%codeblock lang:bash%}
$ git stash list
stash@{0}: WIP on master: 049d078 added the index file
stash@{1}: WIP on master: c264051 Revert &amp;ldquo;added file_size&amp;rdquo;
stash@{2}: WIP on master: 21d80a5 added number to log
{%endcodeblock%}
在这个案例中，之前已经进行了两次储藏，所以你可以访问到三个不同的储藏。&lt;/p&gt;

&lt;h3 id=&#34;a-name-apply-应用储藏-a&#34;&gt;&lt;a name=&#34;apply&#34;&gt;应用储藏&lt;/a&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;执行&lt;strong&gt;&lt;font color=&#34;red&#34;&gt;git stash apply&lt;/font&gt;&lt;/strong&gt;命令, 可以重新应用最近的一次储藏；
执行&lt;strong&gt;&lt;font color=&#34;red&#34;&gt;git stash apply stash@{2}&lt;/font&gt;&lt;/strong&gt;命令，即通过指定储藏的名字，来应用更早的储藏。
{%codeblock lang:bash%}
$ git stash apply&lt;/p&gt;

&lt;h1 id=&#34;on-branch-master-1&#34;&gt;On branch master&lt;/h1&gt;

&lt;h1 id=&#34;changes-not-staged-for-commit-1&#34;&gt;Changes not staged for commit:&lt;/h1&gt;

&lt;h1 id=&#34;use-git-add-file-to-update-what-will-be-committed-1&#34;&gt;(use &amp;ldquo;git add &lt;file&gt;&amp;hellip;&amp;rdquo; to update what will be committed)&lt;/h1&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1 id=&#34;modified-index-html-1&#34;&gt;modified:   index.html&lt;/h1&gt;

&lt;h1 id=&#34;modified-lib-simplegit-rb-1&#34;&gt;modified:   lib/simplegit.rb&lt;/h1&gt;

&lt;p&gt;#
{%endcodeblock%}&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>XcodeHeaderDoc教程</title>
      <link>https://it-boyer.github.io/post/xcode/xcodeheaderdoc%E6%95%99%E7%A8%8B/</link>
      <pubDate>Thu, 28 Aug 2014 15:18:41 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/xcode/xcodeheaderdoc%E6%95%99%E7%A8%8B/</guid>
      <description>&lt;p&gt;HeaderDoc 是在Xcode 5 和 iOS7 发布时，新增的一个命令行工具，功能：可以从代码中自动生成格式良好的HTML文档——当然，必须依赖于特定格式的注释来完成的。&lt;/p&gt;

&lt;p&gt;另外，Xcode 还会在 quick look 面板中以&lt;strong&gt;HeaderDoc&lt;/strong&gt;风格显示你的注释。&lt;/p&gt;

&lt;p&gt;通过本教程，将学习如下几点：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;如何书写 HeaderDoc 风格的注释&lt;/li&gt;
&lt;li&gt;分如何在 Xcode 中预览文档&lt;/li&gt;
&lt;li&gt;如何生成 HTML 文档&lt;/li&gt;
&lt;li&gt;如何使用 VVDocumenter-Xcode(一个易于使用的第3方文档制作工具)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;准备工作&#34;&gt;准备工作&lt;/h4&gt;

&lt;p&gt;下载本教程中用到的 &lt;a href=&#34;http://cdn2.raywenderlich.com/wp-content/uploads/2014/03/DocumentationExamples_Starter.zip&#34;&gt;示例项目&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这个简单的示例程序只包含了两个类：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Car: 包含几个属性及一个 “drive” 方法以及一个 completion 块。&lt;/li&gt;
&lt;li&gt;MathAPI: 包含了1个方法，用于累加两个数。
现在，这两个类还没有任何注释。以便演示如何通过 &lt;strong&gt;HeaderDoc&lt;/strong&gt; 为这两个类创建文档。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>instrument之Zombie工具</title>
      <link>https://it-boyer.github.io/post/%E8%B0%83%E8%AF%95/instrument%E4%B9%8Bzombie%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Tue, 01 Jul 2014 19:54:02 +0800</pubDate>
      
      <guid>https://it-boyer.github.io/post/%E8%B0%83%E8%AF%95/instrument%E4%B9%8Bzombie%E5%B7%A5%E5%85%B7/</guid>
      <description>&lt;p&gt;Zombie:针对&lt;strong&gt;僵尸对象&lt;/strong&gt;导致应用程序崩溃，即已经&lt;code&gt;deallocated&lt;/code&gt;的对象，它们的&lt;code&gt;retainCount&lt;/code&gt;计数器已经为0，通过正常的手段是无法在&lt;code&gt;debug&lt;/code&gt;中跟踪和观察到的。&lt;/p&gt;

&lt;p&gt;如果你开启了 &lt;code&gt;Zombie Enabled&lt;/code&gt; ，则当 Zombie 问题出现时，控制台会输出 Zombie 对象的地址，且程序会在此处产生断点：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; -[CALayer retainCount]: message sent to deallocated instance &amp;lt;memoryaddress&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>